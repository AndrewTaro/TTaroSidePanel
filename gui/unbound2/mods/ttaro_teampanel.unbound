(def constant TT_TEAMPANEL_INSTALLED "true")
(def constant TP_ELEMENT_TOP "160")
(def constant TP_PLAYER_ROW_SIZE {
	WIDTH: 200,
	HEIGHT: 27
})
(def constant TP_SHIPCONFIG_ELEMENT_WIDTH {
	WITH_UNIT: 48,
	NO_UNIT: 32
})
(def constant TP_TOOLTIP_ELEMENTS_VGAP "5px")
(def constant TP_DIVISION_ELEMENT_WIDTH "20px")
#--------------------------------------------------------------------------------
#For Masters Tournament and the ship-weight rules:
#
#	1. Un-comment out the following constant, or make the same one on another file.
#		a. File name is your choice. The only requirement is to call it "TP_SHIPWEIGHT_DATA"
#	2. Create entries like the existing ones, and replace them. {shipId[str] : shipWeight[number], ...}
#		a. Ship ID can be retrieved from gameparams.
#   	b. Single-quotation must be used for the keys, not the double.
#		c. Do not forget the comma at the end of each line.
#		d. Indent does not matter. But I recommend you putting 4 spaces or 1 tab for the sake of readablity.
#	3. Done. You don't have to edit anything further and should be able to see the values in the game.
#--------------------------------------------------------------------------------
# (def constant TP_SHIPWEIGHT_DATA {
# 	'4179572720': 300,
# 	'3760075984': 12,
# 	'4178458320': 60,
# 	'4074158064': 50,
# 	'4074682192': 160,
# })
#--------------------------------------------------------------------------------

(def constant TP_USERPREFS_KEY {
	#GENERAL
	STATS_ALT_VISIBLE: 'ttTeamPanelShipStatsVisibleOnAlt',
	UNITS_VISIBLE: 'ttTeamPanelShipStatsUnitsVisible',
	POS_OFFSET: 'ttTeamPanelPosOffset',
	SCALE_OFFSET: 'ttTeamPanelScaleOffset',
	BLUR_MODE: 'ttTeamPanelBlurMode',
	BLUR_ALT_VISIBLE: 'ttTeamPanelBlurVisibleOnAlt',
	BLUR_ALPHA: 'ttTeamPanelBlurOpacity',
	DEAD_PLAYER_VISIBLE: 'ttTeamPanelDeadPlayerVisible',
	#NAMES
	CLAN_NAME: 'ttTeamPanelClanNameVisible',
	CLAN_ICON: 'ttTeamPanelClanIconVisible',
	PLAYER_NAME: 'ttTeamPanelPlayerNameVisible',
	KILL_COUNT: 'ttTeamPanelPlayerKillsVisible',
	SHIP_NAME: 'ttTeamPanelShipNameVisible',
	SHIP_TIER: 'ttTeamPanelShipTierVisible',
	SHIP_ICON: 'ttTeamPanelShipIconVisible',
	SHIP_ICON_COLOR: 'ttTeamPanelShipIconColorPreset',
	SHIP_DETECTION: 'ttTeamPanelShipDetectionVisible',
	HEALTHBAR_OPACITY: 'ttTeamPanelHealthBarOpacity',
	HEALTHBAR_WIDTH: 'ttTeamPanelHealthBarWidth',
	#SHIPCONFIGS
	#Artillery
	ARTILLERY_RANGE: 'ttTeamPanelArtilleryRangeVisible',
	ARTILLERY_RELOAD: 'ttTeamPanelArtilleryReloadVisible',
	#Torpedo
	TORPEDO_RANGE: 'ttTeamPanelTorpedoRangeVisible',
	TORPEDO_RELOAD: 'ttTeamPanelTorpedoReloadVisible',
	#ATBA
	ATBA_RANGE: 'ttTeamPanelAtbaRangeVisible',
	#AntiAir
	ANTIAIR_RANGE: 'ttTeamPanelAntiAirRangeVisible',
	ANTIAIR_RATE: 'ttTeamPanelAntiAirRateVisible',
	#AirSupport
	AIRSUPPORT_RANGE: 'ttTeamPanelAirSupportRangeVisible',
	AIRSUPPORT_RELOAD: 'ttTeamPanelAirSupportReloadVisible',
	#Speed
	SPEED_SURFACE: 'ttTeamPanelSpeedSurfaceVisible',
	SPEED_UNDERWATER: 'ttTeamPanelSpeedUnderwaterVisible',
	#Visibility
	VISIBILITY_SURFACE: 'ttTeamPanelVisibilitySurfaceVisible',
	VISIBILITY_AIR: 'ttTeamPanelVisibilityAirVisible',
	#Surface Consumable
	RADAR_RANGE: 'ttTeamPanelRadarRangeVisible',
	HYDRO_RANGE: 'ttTeamPanelHydroRangeVisible',
	#Sub Consumable
	SUB_RADAR_RANGE: 'ttTeamPanelSubRadarRangeVisible',
	SUB_HYDRO_RANGE: 'ttTeamPanelSubHydroRangeVisible',
})

(def constant TP_SHIP_ICON_COLOR_PRESET [
	#Use -(234-0x??)
	#None
	{
		Auxiliary:	{},
		AirCarrier:	{},
		Battleship:	{},
		Cruiser:	{},
		Destroyer: 	{},
		Submarine:	{},
	},
	#Aslain v1
	{
		Auxiliary:	{redOffset: -184, greenOffset: -134, blueOffset: -234, alphaOffset:    0},
		AirCarrier:	{redOffset: -106, greenOffset:  -64, blueOffset:   21, alphaOffset:    0},
		Battleship:	{redOffset:   21, greenOffset: -106, blueOffset: -106, alphaOffset:    0},
		Cruiser:	{redOffset:	  21, greenOffset: 	  0, blueOffset: -106, alphaOffset:    0},
		Destroyer: 	{redOffset:	 -64, greenOffset: 	 21, blueOffset: -106, alphaOffset:    0},
		Submarine:	{redOffset: -207, greenOffset:    4, blueOffset:   11, alphaOffset:    0},
	},
	#Aslain v2
	{
		Auxiliary:	{redOffset: -184, greenOffset: -134, blueOffset: -234, alphaOffset:    0},
		AirCarrier:	{redOffset:  -43, greenOffset: -106, blueOffset:   21, alphaOffset:    0},
		Battleship:	{redOffset:   21, greenOffset: -106, blueOffset: -106, alphaOffset:    0},
		Cruiser:	{redOffset:	  21, greenOffset: 	  0, blueOffset: -106, alphaOffset:    0},
		Destroyer: 	{redOffset:	 -64, greenOffset: 	 21, blueOffset: -106, alphaOffset:    0},
		Submarine:	{redOffset: -106, greenOffset:  -64, blueOffset:   21, alphaOffset:    0},
	},
	#AutoSpy
	{
		Auxiliary:	{redOffset: -184, greenOffset: -134, blueOffset: -234, alphaOffset: -128},
		AirCarrier:	{redOffset: -134, greenOffset: -134, blueOffset: -134, alphaOffset: -128},
		Battleship:	{redOffset: -234, greenOffset: -184, blueOffset: -154, alphaOffset: -128},
		Cruiser:	{redOffset: -89,  greenOffset: -159, blueOffset: -234, alphaOffset: -128},
		Destroyer: 	{redOffset: -184, greenOffset: -134, blueOffset: -184, alphaOffset: -128},
		Submarine:	{redOffset: -224, greenOffset: -224, blueOffset: -224, alphaOffset: -128},
	},
	#Roslich
	{
		Auxiliary:	{redOffset:   21, greenOffset: -234, blueOffset:   21, alphaOffset:    0},
		AirCarrier:	{redOffset:   21, greenOffset:   21, blueOffset: -234, alphaOffset:    0},
		Battleship:	{redOffset:   21, greenOffset: -234, blueOffset: -234, alphaOffset:    0},
		Cruiser:	{redOffset: -234, greenOffset: -234, blueOffset:   21, alphaOffset:    0},
		Destroyer: 	{redOffset: -234, greenOffset:    0, blueOffset: -234, alphaOffset:    0},
		Submarine:	{redOffset: -234, greenOffset:   21, blueOffset:   21, alphaOffset:    0},
	},
	#DeCease
	{
		Auxiliary:	{redOffset:   11, greenOffset: -235, blueOffset:   40, alphaOffset:    0},
		AirCarrier:	{redOffset:   -9, greenOffset:  -60, blueOffset: -119, alphaOffset:    0},
		Battleship:	{redOffset:  -65, greenOffset:  -74, blueOffset:   40, alphaOffset:    0},
		Cruiser:	{redOffset:   20, greenOffset:  -76, blueOffset: -128, alphaOffset:    0},
		Destroyer: 	{redOffset: -137, greenOffset:   11, blueOffset: -124, alphaOffset:    0},
		Submarine:	{redOffset: -255, greenOffset: -255, blueOffset: -255, alphaOffset:    0},
	},
	#Hakabase
	{
		Auxiliary:	{redOffset: -184, greenOffset: -134, blueOffset: -234, alphaOffset:  -70},
		AirCarrier:	{redOffset: -226, greenOffset:   -7, blueOffset:   21, alphaOffset:  -70},
		Battleship:	{redOffset:   21, greenOffset: -234, blueOffset: -234, alphaOffset:  -70},
		Cruiser:	{redOffset:	  21, greenOffset: 	 21, blueOffset: -234, alphaOffset:  -70},
		Destroyer: 	{redOffset:	-234, greenOffset: 	 21, blueOffset: -234, alphaOffset:  -70},
		Submarine:	{redOffset:   21, greenOffset: -234, blueOffset:  -81, alphaOffset:  -70},
	},
])
(def constant TP_CONSUMABLES_DATA {
    '4181112272': {submarineLocator: 9.0, hydrophone: 7.0, },
    '3764303664': {sonar: 5.5, },
    '3751196368': {hydrophone: 7.0, },
    '4183734064': {sonar: 5.5, },
    '3752769232': {sonar: 5.0, },
    '3741235152': {rls: 9.0, sonar: 5.0, },
    '3720263120': {sonar: 5.0, },
    '3750639568': {sonar: 3.0, },
    '4179539728': {sonar: 5.0, },
    '4184749872': {sonar: 4.0, },
    '4183733712': {sonar: 4.0, },
    '4077827792': {sonar: 4.0, },
    '3741234992': {sonar: 6.0, },
    '3256792848': {sonar: 5.0, },
    '3753817936': {sonar: 4.0, },
    '4074682064': {sonar: 5.0, },
    '3540956368': {sonar: 5.0, },
    '4179506384': {rls: 7.5, },
    '3762206160': {sonar: 5.0, },
    '4179539760': {sonar: 6.0, },
    '3555636944': {sonar: 4.0, },
    '4274960368': {rls: 10.0, sonar: 5.0, },
    '4178490832': {rls: 12.0, sonar: 5.0, },
    '3764303312': {sonar: 4.0, },
    '4075697456': {rls: 9.0, },
    '3553540080': {sonar: 4.0, },
    '3741234640': {rls: 10.0, sonar: 5.0, },
    '4180555568': {sonar: 5.0, },
    '3552491216': {sonar: 5.0, },
    '3762173744': {sonar: 5.0, },
    '3668883440': {sonar: 4.0, },
    '3765352432': {sonar: 4.0, },
    '4182685520': {sonar: 4.0, },
    '4182685456': {sonar: 4.0, },
    '4179539920': {sonar: 5.0, rls: 10.0, },
    '4076779504': {rls: 9.0, sonar: 5.0, },
    '4069438928': {sonar: 4.0, },
    '3762206704': {rls: 9.0, sonar: 5.0, },
    '4291737040': {sonar: 4.0, },
    '4180588336': {sonar: 6.0, },
    '3340679120': {sonar: 5.0, },
    '3550394352': {rls: 8.5, sonar: 5.0, },
    '3531519792': {sonar: 6.0, },
    '4179507152': {sonar: 3.0, },
    '3752802096': {sonar: 5.0, },
    '4179572528': {sonar: 6.0, },
    '3721344976': {sonar: 4.0, },
    '4281251536': {sonar: 4.0, },
    '3760076080': {sonar: 5.0, },
    '3762206544': {sonar: 5.0, },
    '3731830736': {sonar: 4.0, },
    '3761157488': {sonar: 3.0, },
    '4182652880': {sonar: 3.0, },
    '3761681872': {submarineLocator: 9.0, hydrophone: 7.0, },
    '4181604304': {sonar: 3.0, },
    '3730749424': {sonar: 5.0, },
    '4280203248': {rls: 10.0, sonar: 5.0, },
    '3765352400': {sonar: 4.0, },
    '3655218480': {rls: 7.5, },
    '4182685136': {sonar: 4.0, },
    '3764303216': {sonar: 4.0, },
    '4278106096': {rls: 10.0, sonar: 5.0, },
    '4259231440': {sonar: 5.0, },
    '4181112816': {submarineLocator: 6.0, hydrophone: 8.0, },
    '4289640432': {sonar: 4.0, },
    '3760109264': {sonar: 5.0, },
    '3763255024': {sonar: 4.0, },
    '4185830736': {sonar: 3.0, },
    '4184782640': {sonar: 5.5, },
    '3765351888': {sonar: 4.0, },
    '3741267408': {rls: 12.0, },
    '3763221872': {sonar: 3.5, },
    '4182652720': {sonar: 4.0, },
    '3759585072': {submarineLocator: 6.0, hydrophone: 8.0, },
    '3754866128': {sonar: 4.0, },
    '4182685008': {sonar: 3.0, },
    '3667801296': {sonar: 5.5, },
    '3551442640': {sonar: 4.0, },
    '4074682192': {sonar: 5.0, },
    '3655251408': {sonar: 5.0, },
    '4179015120': {submarineLocator: 10.0, hydrophone: 7.0, },
    '4285445392': {rls: 15.0, },
    '4185831376': {sonar: 4.0, },
    '4180587952': {sonar: 5.0, },
    '4077828048': {sonar: 4.0, },
    '3720263632': {sonar: 5.0, },
    '4178457808': {rls: 7.5, },
    '3760076144': {sonar: 5.0, },
    '4281251088': {sonar: 12.0, },
    '4076746032': {rls: 9.0, },
    '3760076752': {sonar: 3.0, },
    '4255037136': {sonar: 5.0, },
    '3542005744': {rls: 9.0, sonar: 5.0, },
    '3554588464': {sonar: 5.5, },
    '4183733584': {sonar: 3.0, },
    '3761125136': {sonar: 5.0, },
    '3679369200': {rls: 8.5, sonar: 4.0, },
    '3720263664': {sonar: 5.0, },
    '4178491184': {sonar: 6.0, },
    '3331241680': {sonar: 4.0, },
    '3762173232': {rls: 7.5, },
    '3763255248': {rls: 8.5, sonar: 4.0, },
    '3761682384': {submarineLocator: 6.0, hydrophone: 6.0, },
    '4076779344': {sonar: 5.0, },
    '3764303696': {sonar: 4.0, },
    '4183701456': {sonar: 3.0, },
    '3666818864': {sonar: 6.0, },
    '3256792528': {rls: 12.0, sonar: 5.0, },
    '4179015472': {submarineLocator: 9.0, hydrophone: 8.0, },
    '3760109008': {rls: 12.0, },
    '4180621104': {sonar: 6.0, },
    '4179015632': {submarineLocator: 6.0, hydrophone: 6.0, },
    '3542005552': {sonar: 6.0, },
    '3763255280': {rls: 10.0, sonar: 4.0, },
    '3332290256': {sonar: 4.0, },
    '3763255120': {sonar: 4.0, },
    '4078352176': {submarineLocator: 9.0, hydrophone: 7.0, },
    '4248745968': {sonar: 4.0, },
    '4281218320': {sonar: 5.0, },
    '4276008304': {submarineLocator: 7.0, sonar: 5.0, },
    '4078876624': {sonar: 4.0, },
    '3749623504': {sonar: 5.0, },
    '3751720752': {sonar: 6.0, },
    '4277057520': {rls: 10.0, sonar: 5.0, },
    '3655218992': {sonar: 6.0, },
    '3655251952': {rls: 10.0, sonar: 5.0, },
    '4181637072': {sonar: 5.0, rls: 10.0, },
    '3760109392': {sonar: 5.0, },
    '3762206512': {sonar: 6.0, },
    '4276008656': {sonar: 4.0, },
    '3761190896': {rls: 9.5, },
    '4184782256': {sonar: 4.0, },
    '4282300112': {sonar: 5.0, },
    '4178523952': {sonar: 6.0, },
    '4181112624': {submarineLocator: 9.0, hydrophone: 7.0, },
    '3740153840': {rls: 7.5, },
    '4291736848': {rls: 15.0, },
    '3655284688': {sonar: 3.0, },
    '3760109520': {rls: 9.0, sonar: 5.0, },
    '4184782800': {sonar: 4.0, },
    '4178491216': {sonar: 5.0, },
    '4185830864': {sonar: 4.0, },
    '4078876656': {sonar: 4.0, },
    '4074714928': {sonar: 5.5, },
    '3761190192': {sonar: 5.0, },
    '4182685488': {sonar: 5.5, },
    '4074157872': {submarineLocator: 9.0, hydrophone: 8.0, },
    '4277056880': {sonar: 4.0, },
    '3659445712': {sonar: 4.0, },
    '3751687984': {sonar: 5.5, },
    '4185831248': {sonar: 4.0, },
    '3762206032': {sonar: 5.0, },
    '4180588496': {sonar: 5.0, rls: 10.0, },
    '4183734032': {sonar: 4.0, },
    '3551410160': {rls: 7.5, },
    '4183734224': {sonar: 4.0, },
    '4182685680': {sonar: 4.0, },
    '3658397424': {sonar: 6.0, },
    '4181636880': {sonar: 5.0, },
    '4274926864': {sonar: 7.0, },
    '3550393808': {sonar: 5.0, },
    '4077860656': {sonar: 5.0, },
    '4075730640': {sonar: 5.0, },
    '4077828080': {sonar: 4.0, },
    '4180587856': {sonar: 3.0, rls: 9.0, },
    '4183209936': {submarineLocator: 6.0, hydrophone: 6.0, },
    '3750672080': {sonar: 5.0, },
    '4180588304': {sonar: 5.0, },
    '4181636560': {rls: 12.0, sonar: 5.0, },
    '4181636432': {sonar: 3.0, rls: 9.0, },
    '4179015664': {submarineLocator: 6.0, hydrophone: 9.0, },
    '3760109552': {rls: 10.0, sonar: 5.0, },
    '3764303600': {sonar: 4.0, },
    '4179539408': {rls: 12.0, sonar: 5.0, },
    '4181603536': {rls: 7.5, },
    '3764270896': {sonar: 4.0, },
    '3446585136': {sonar: 6.0, },
    '3751720944': {sonar: 5.0, },
    '3666786288': {rls: 10.0, sonar: 5.0, },
    '3763255088': {sonar: 5.5, },
    '4183734096': {sonar: 4.0, },
    '4178491344': {sonar: 5.0, rls: 10.0, },
    '4180588368': {sonar: 5.0, },
    '3740185808': {sonar: 6.0, },
    '4286494416': {sonar: 4.0, },
    '4074682352': {sonar: 5.0, rls: 9.0, },
    '4078876368': {sonar: 4.0, },
    '4076779472': {sonar: 5.0, },
    '3744380368': {sonar: 4.0, },
    '4179506992': {sonar: 6.0, },
    '4181636912': {sonar: 6.0, },
    '3752736720': {sonar: 3.0, },
    '4179539280': {sonar: 3.0, rls: 9.0, },
    '4074681808': {rls: 12.0, sonar: 5.0, },
    '3445536592': {sonar: 5.0, },
    '3445536208': {sonar: 5.0, },
    '4074158064': {submarineLocator: 6.0, hydrophone: 9.0, },
    '4076255024': {submarineLocator: 9.0, hydrophone: 7.0, },
    '3340678608': {rls: 12.0, sonar: 5.0, },
    '4285445840': {sonar: 5.0, },
    '4273911760': {sonar: 5.0, },
    '4181636944': {sonar: 5.0, },
    '4267620048': {sonar: 4.0, },
    '3340678960': {sonar: 6.0, },
    '4287542992': {sonar: 4.0, },
    '3749623248': {rls: 12.0, },
    '3445536720': {sonar: 5.0, },
    '3363747792': {sonar: 5.0, rls: 10.0, },
    '4079925200': {sonar: 4.0, },
    '3315513040': {sonar: 5.0, },
    '3765352144': {sonar: 4.0, },
    '4181637104': {rls: 10.0, sonar: 5.0, },
    '4075763504': {sonar: 5.5, },
    '4181669680': {sonar: 5.0, },
    '4292785424': {sonar: 5.0, },
    '3762239280': {sonar: 5.0, },
    '3667834672': {sonar: 6.0, },
    '3676223184': {sonar: 5.0, },
    '4076779216': {sonar: 5.0, },
    '4074682320': {sonar: 5.0, },
    '4287543280': {sonar: 4.0, },
    '4183733680': {sonar: 4.0, },
    '4178491376': {rls: 10.0, sonar: 5.0, },
    '4183734256': {sonar: 4.0, },
    '4183209776': {submarineLocator: 9.0, hydrophone: 7.0, },
    '4283348240': {rls: 15.0, },
    '3761157968': {sonar: 5.0, },
    '3247388464': {sonar: 6.0, },
    '4180554960': {rls: 7.5, },
    '4284396912': {submarineLocator: 8.0, sonar: 5.0, },
    '3751720400': {sonar: 4.0, },
    '3445536464': {sonar: 5.0, },
    '4076812080': {sonar: 5.5, },
    '3355359056': {sonar: 4.0, },
    '3753818064': {sonar: 3.0, },
    '4181604144': {sonar: 5.0, },
    '4074648880': {rls: 9.0, },
    '4076255216': {submarineLocator: 6.0, hydrophone: 8.0, },
    '3709777360': {sonar: 5.0, },
    '3730782192': {rls: 10.0, },
    '4282300400': {sonar: 4.0, },
    '3739137488': {sonar: 5.0, },
    '4180587984': {rls: 12.0, sonar: 5.0, },
    '3542005456': {sonar: 5.0, },
    '3753817904': {sonar: 5.5, },
    '4185830832': {sonar: 4.0, },
    '4273911792': {rls: 10.0, sonar: 5.0, },
    '4075730896': {sonar: 5.0, },
    '3539941360': {rls: 9.0, },
    '3969824208': {rls: 12.0, sonar: 5.0, },
    '4247697392': {sonar: 4.0, },
    '3761157936': {sonar: 6.0, },
    '4078909232': {sonar: 5.0, },
    '4179539792': {sonar: 5.0, },
    '4185831184': {sonar: 4.0, },
    '3667834576': {sonar: 5.0, },
    '3543054032': {sonar: 4.0, },
    '3753817456': {sonar: 4.0, },
    '3751720912': {rls: 9.0, },
    '3340711728': {sonar: 6.0, },
    '3741235184': {rls: 10.0, sonar: 5.0, },
    '3267278288': {rls: 12.0, sonar: 5.0, },
    '4183701296': {sonar: 4.0, },
    '3740186416': {sonar: 6.0, },
    '3761157584': {rls: 12.0, },
    '4280202608': {sonar: 4.0, },
    '3761157904': {sonar: 5.0, },
    '4181112784': {submarineLocator: 6.0, hydrophone: 6.0, },
    '4079924944': {sonar: 4.0, },
    '3550360880': {rls: 7.5, },
    '4278105456': {submarineLocator: 6.0, sonar: 4.0, },
    '3730748880': {sonar: 5.0, },
    '3553539792': {sonar: 4.0, },
    '4269717488': {sonar: 4.0, },
    '3763254608': {sonar: 4.0, },
    '3762173136': {sonar: 5.5, },
    '3742316496': {sonar: 4.0, },
    '4274959728': {submarineLocator: 8.0, sonar: 5.0, },
    '3543021520': {sonar: 3.0, },
    '3969857328': {sonar: 6.0, },
    '4183209968': {submarineLocator: 6.0, hydrophone: 8.0, },
    '3764303152': {sonar: 4.0, },
    '4180588528': {rls: 10.0, sonar: 5.0, },
    '4076745936': {sonar: 5.5, },
    '4075730928': {sonar: 5.0, rls: 9.0, },
    '3522082512': {sonar: 4.0, },
    '3762205904': {sonar: 5.0, },
    '3763254992': {sonar: 4.0, },
    '4289640144': {sonar: 4.0, },
    '4184782288': {sonar: 4.0, },
    '3741202128': {sonar: 5.0, },
    '3655251920': {sonar: 5.0, },
    '3752736112': {sonar: 4.0, },
    '4185831216': {sonar: 5.5, },
    '3532568272': {sonar: 4.0, },
    '4075730384': {rls: 12.0, sonar: 5.0, },
    '4184782160': {sonar: 3.0, },
    '4184782608': {sonar: 4.0, },
    '4282299664': {sonar: 12.0, },
    '3764303056': {sonar: 4.0, },
    '3761682128': {sonar: 5.0, },
    '3762206128': {sonar: 5.0, },
    '4076778960': {rls: 12.0, sonar: 5.0, },
    '3760108912': {sonar: 5.0, rls: 12.0, },
    '4182685104': {sonar: 4.0, },
    '4182685648': {sonar: 4.0, },
    '4183209424': {submarineLocator: 7.0, hydrophone: 7.0, },
    '3667802064': {sonar: 3.0, },
    '3655219184': {sonar: 5.0, },
    '4180555728': {sonar: 3.0, },
    '3750672368': {rls: 9.0, sonar: 5.0, },
    '3699291600': {sonar: 4.0, },
    '3762206672': {sonar: 5.0, },
    '3764303280': {sonar: 4.0, },
    '3750672112': {sonar: 5.0, },
    '4179539376': {sonar: 5.0, },
    '3752769328': {sonar: 5.5, },
    '3759585264': {submarineLocator: 6.0, hydrophone: 9.0, },
    '4278072592': {sonar: 5.0, },
    '3709777872': {sonar: 5.0, },
    '4078352368': {submarineLocator: 6.0, hydrophone: 8.0, },
    '3750672176': {sonar: 6.0, },
    '4181636528': {sonar: 5.0, },
    '4288591856': {rls: 8.5, sonar: 4.0, },
    '4184782672': {sonar: 4.0, },
    '3760075984': {sonar: 5.5, },
    '3445536752': {sonar: 5.0, },
    '3761190704': {sonar: 6.0, },
    '3730749392': {sonar: 5.0, },
    '4075730768': {sonar: 5.0, },
})
(def constant TP_CONCEALMENT_SKILL_ID {
	'AirCarrier': 45,
	#'Auxiliary': null,
	'Battleship': 12,
	'Cruiser': 12,
	'Destroyer': 12,
	#'Submarine': null
})
(def constant TP_CONCEALMENT_CREW_ID "-1") #Works until WG introduces the EPIC CONCEALMENT SKILL (hope that never happens)
(def constant TP_ATBA_SKILL_ID {
	'AirCarrier': 41,
	#'Auxiliary': null,
	'Battleship': 40,
	'Cruiser': 30,
	#'Destroyer': null,
	#'Submarine': null
})
(def constant TP_ATBA_CREW_ID "-1") #Works until WG introduces the EPIC ATBA SKILL (hope that never happens)
#--------------------------------------------------------------------------------
#Main Elements
#--------------------------------------------------------------------------------
(def element TTaroTeamPanels () layout=true
	(scope
		(macro STAGE_SIZE)
		(macro TP_GET_USERPREFS)
		(macro TP_GET_PREF_NUMBER "'posOffset'" "TP_USERPREFS_KEY.POS_OFFSET" _modifier="10.0" _default="50.0")
		(var posTop:number = "TP_ELEMENT_TOP + posOffset - 50")
	)
	(bindcall externalCall 'inputMapping.onAction' "['createParamsForAllShipsInBattle', {}]" on='addedToStage')
	#Hide the default Ub1 ears
	(bindcall externalCall 'direct.action' "['option.set', ['battle.ears.enabled', false]]" init=false watch=false on='addedToStage')

	(style
		(bind width "stageWidth")
		(bind height "stageHeight")
	)

	(block
		(style
			(position = absolute)
			(bind top "posTop")
			(width = 100%)
		)
		(element TP_TeamPanelLeft _userPrefsNum="_userPrefsNum")
		(element TP_TeamPanelRight _userPrefsNum="_userPrefsNum")
	)
)

#Ally
(def element TP_TeamPanelLeft (_userPrefsNum:dict=null)
	(scope
		(var avatarCollection:gfx = "$datahub.getCollection(CC.avatar)")
		(var allyCollection:gfx = "avatarCollection ? avatarCollection.getChildByPath('team.ally.sortedAlive') : null" (event "avatarCollection.evChildAdded") (event "collection.evChildRemoved"))
		(var allyItems:array = "allyCollection ? allyCollection.items : null" (event "allyCollection.evAdded") (event "allyCollection.evRemoved")  (event "allyCollection.evUpdated"))
		(var isEnabled:bool = "allyItems && allyItems.length > 0")
		(macro TP_GET_PREF_NUMBER "'scaleOffset'" "TP_USERPREFS_KEY.SCALE_OFFSET" _modifier="0.1" _default="0.5")
		(var sizeScale:number = "1 + scaleOffset - 0.5")
	)

	(style
		(position = absolute)
		(left = 0)
	)
	(macro BIND_FAIR_SCALE "sizeScale")

	(bind visible "isEnabled")

	(element TP_HeaderItem _isAlly="true" _userPrefsNum="_userPrefsNum")

	(controller $Repeat renderer='TP_PlayerItem'
		(bind count "allyCollection ? allyCollection.items.length : 0")
		(args "allyItems" _isAlly="true" _userPrefsNum="_userPrefsNum")

		(bindcall removeChildAt "$event[1]" (event "allyCollection.evRemoved"))
		(bindcall addChildAt "$event[1]" (event "allyCollection.evAdded"))
	)
)

#Enemy
(def element TP_TeamPanelRight (_userPrefsNum:dict=null)
	(scope
		(var avatarCollection:gfx = "$datahub.getCollection(CC.avatar)")
		(var enemyCollection:gfx = "avatarCollection ? avatarCollection.getChildByPath('team.enemy.sortedAlive') : null" (event "avatarCollection.evChildAdded") (event "collection.evChildRemoved"))
		(var enemyItems:array = "enemyCollection ? enemyCollection.items : null" (event "enemyCollection.evAdded") (event "enemyCollection.evRemoved") (event "enemyCollection.evUpdated"))
		(var isEnabled:bool = "enemyItems && enemyItems.length > 0")
		(macro TP_GET_PREF_NUMBER "'scaleOffset'" "TP_USERPREFS_KEY.SCALE_OFFSET" _modifier="0.1" _default="0.5")
		(var sizeScale:number = "1 + scaleOffset - 0.5")
	)

	(style
		(position = absolute)
		(right = 0)
		(align="right")
		(pivotX = 100%)
	)
	(macro BIND_FAIR_SCALE "sizeScale")

	(bind visible "isEnabled")

	(element TP_HeaderItem _isAlly="false" _userPrefsNum="_userPrefsNum")

	(controller $Repeat renderer='TP_PlayerItem'
		(bind count "enemyCollection ? enemyCollection.items.length : 0")
		(args "enemyItems" _isAlly="false" _userPrefsNum="_userPrefsNum")

		(bindcall removeChildAt "$event[1]" (event "enemyCollection.evRemoved"))
		(bindcall addChildAt "$event[1]" (event "enemyCollection.evAdded"))
	)
)

#Header for ship configs
(def element TP_HeaderItem (_isAlly:bool=false, _userPrefsNum:dict=null)
	(scope
		#Artillery
		(macro TP_GET_PREF_BOOL _varName="'isArtilleryRangeVisible'" _prefKey="TP_USERPREFS_KEY.ARTILLERY_RANGE")
		(macro TP_GET_PREF_BOOL _varName="'isArtilleryReloadVisible'" _prefKey="TP_USERPREFS_KEY.ARTILLERY_RELOAD")
		(var isArtilleryEnabled:bool = "isArtilleryRangeVisible || isArtilleryReloadVisible")
		#ATBA
		(macro TP_GET_PREF_BOOL _varName="'isAtbaRangeVisible'" _prefKey="TP_USERPREFS_KEY.ATBA_RANGE")
		(var isAtbaEnabled:bool = "isAtbaRangeVisible")
		#Torpedo
		(macro TP_GET_PREF_BOOL _varName="'isTorpedoRangeVisible'" _prefKey="TP_USERPREFS_KEY.TORPEDO_RANGE")
		#(macro TP_GET_PREF_BOOL _varName="'isTorpedoReloadVisible'" _prefKey="TP_USERPREFS_KEY.TORPEDO_RELOAD")
		(var isTorpedoEnabled:bool = "isTorpedoRangeVisible")
		#AntiAir
		(macro TP_GET_PREF_BOOL _varName="'isAntiAirRangeVisible'" _prefKey="TP_USERPREFS_KEY.ANTIAIR_RANGE")
		(macro TP_GET_PREF_BOOL _varName="'isAntiAirRatingVisible'" _prefKey="TP_USERPREFS_KEY.ANTIAIR_RATE")
		(var isAntiAirEnabled:bool = "isAntiAirRangeVisible || isAntiAirRatingVisible")
		#AirSupport
		(macro TP_GET_PREF_BOOL _varName="'isAirSupportRangeVisible'" _prefKey="TP_USERPREFS_KEY.AIRSUPPORT_RANGE")
		(macro TP_GET_PREF_BOOL _varName="'isAirSupportReloadVisible'" _prefKey="TP_USERPREFS_KEY.AIRSUPPORT_RELOAD")
		(var isAirSupportEnabled:bool = "isAirSupportRangeVisible || isAirSupportReloadVisible")
		#Mobility
		(macro TP_GET_PREF_BOOL _varName="'isSurfaceMobilityVisible'" _prefKey="TP_USERPREFS_KEY.SPEED_SURFACE")
		(macro TP_GET_PREF_BOOL _varName="'isUnderwaterMobilityVisible'" _prefKey="TP_USERPREFS_KEY.SPEED_UNDERWATER")
		(var isMobilityEnabled:bool = "isSurfaceMobilityVisible || isUnderwaterMobilityVisible")
		#Visibility
		(macro TP_GET_PREF_BOOL _varName="'isVisibilityByShipVisible'" _prefKey="TP_USERPREFS_KEY.VISIBILITY_SURFACE")
		(macro TP_GET_PREF_BOOL _varName="'isVisibilityByPlaneVisible'" _prefKey="TP_USERPREFS_KEY.VISIBILITY_AIR")
		(var isVisibilityEnabled:bool = "isVisibilityByShipVisible || isVisibilityByPlaneVisible")
		#Surface Consumable
		(macro TP_GET_PREF_BOOL _varName="'isRadarRangeVisible'" _prefKey="TP_USERPREFS_KEY.RADAR_RANGE")
		(macro TP_GET_PREF_BOOL _varName="'isHydroRangeVisible'" _prefKey="TP_USERPREFS_KEY.HYDRO_RANGE")
		(var isSurfaceConsumableEnabled:bool = "isRadarRangeVisible || isHydroRangeVisible")
		#Sub Consumables
		(macro TP_GET_PREF_BOOL _varName="'isSubRadarRangeVisible'" _prefKey="TP_USERPREFS_KEY.SUB_RADAR_RANGE")
		(macro TP_GET_PREF_BOOL _varName="'isSubHydroRangeVisible'" _prefKey="TP_USERPREFS_KEY.SUB_HYDRO_RANGE")
		(var isSubmarineConsumableEnabled:bool = "isSubRadarRangeVisible || isSubHydroRangeVisible")
		#ALT
		(macro TP_GET_PREF_BOOL _varName="'isVisibleOnlyAlt'" _prefKey="TP_USERPREFS_KEY.STATS_ALT_VISIBLE" _default="false")
		(var camera:gfx = "$datahub.getSingleComponent(CC.camera)")
		(var altVision:bool = "camera ? camera.altVision : false" (event "camera.evAltVisionChanged"))
	)
	(style
		(hitTest = false)
	)
	(bind visible "isVisibleOnlyAlt ? altVision : true")

	(hblock
		(style
			(align = "center|middle")
			(height = 0)
			(marginTop = "-13")
			(bind flow "_isAlly ? Flow.HORIZONTAL : Flow.REVERSE_HORIZONTAL")
		)
		#For margin
		(element TP_PlayerDivisionItem "_entity")
		(element TP_PlayerInfoItem "_entity" "_isAlly" _userPrefsNum="_userPrefsNum")
		(element TP_PlayerClanIconItem "_entity" "_isAlly" _userPrefsNum="_userPrefsNum")
		(element TP_ShipWeightItem "_entity" _userPrefsNum="_userPrefsNum") #For tournament
		(element TP_ShipTierItem "_entity" _userPrefsNum="_userPrefsNum")
		(element TP_ShipIconItem "_entity" "_isAlly" _userPrefsNum="_userPrefsNum")
		(element TP_ShipDetectionItem "_entity" _userPrefsNum="_userPrefsNum")
		(element TP_PlayerKillCountItem "_entity" _userPrefsNum="_userPrefsNum")
		#

		#Visibility
		(element TP_ShipConfigImageItem "'url:../crew_commander/skills/detection_visibility_range.png'" _isVisible="isVisibilityEnabled" _userPrefsNum="_userPrefsNum")
		#Speed
		(element TP_ShipConfigImageItem "'url:../modules/icon_module_Engine_researched.png'" _isVisible="isMobilityEnabled" _userPrefsNum="_userPrefsNum")
		#AirStrike
		(element TP_ShipConfigImageItem "'url:../battle_hud/icon_frag/icon_frag_bomb.png'" _isVisible="isAirSupportEnabled" _alpha="0.7" _userPrefsNum="_userPrefsNum")
		#AA
		(element TP_ShipConfigImageItem "'url:../battle_hud/lower_log_modifiers/AAAuraDamage.png'" _isVisible="isAntiAirEnabled" _alpha="0.7" _userPrefsNum="_userPrefsNum")
		#ATBA
		(element TP_ShipConfigImageItem "'url:../battle_hud/icon_frag/icon_frag_atba.png'" _isVisible="isAtbaEnabled" _userPrefsNum="_userPrefsNum")
		#Artillery
		(element TP_ShipConfigImageItem "'url:../modules/icon_module_Artillery_researched.png'" _isVisible="isArtilleryEnabled" _userPrefsNum="_userPrefsNum")
		#Torpedo
		(element TP_ShipConfigImageItem "'url:../modules/icon_module_Torpedoes_researched.png'" _isVisible="isTorpedoEnabled" _alpha="0.8" _userPrefsNum="_userPrefsNum")
		
		#(element TP_ShipConfigImageItem "'url:../battle_hud/crosshair/indicators/crosshair_indicator_energy_white.png'") #TODO FIX
		#Hydro/Radar
		(element TP_ShipConfigImageItem "'url:../battle_hud/icon_frag/icon_frag_wave.png'" _isVisible="isSurfaceConsumableEnabled" _alpha="0.7" _userPrefsNum="_userPrefsNum")
		#Hydrophone/SubRadar
		(element TP_ShipConfigImageItem "'url:../battle_hud/icon_frag/icon_frag_wave.png'" _isVisible="isSubmarineConsumableEnabled" _alpha="0.7" _userPrefsNum="_userPrefsNum")
	)
)

#Player
(def element TP_PlayerItem (_items:array, _isAlly:bool=false, _userPrefsNum:dict=null)
	(scope
		(var _entity:gfx = "_items[$index]" watch=false)
		(var _index:number = "indexOf(_entity, _items)")
		(var healthComponent:gfx = "_entity.hasComponent(CC.health) ? _entity.health : null")
		(var isAlive:bool = "healthComponent ? healthComponent.isAlive : false" (event "healthComponent.evIsAliveChanged"))
		#For tooltip
		(event evHideInfotip)
		(event evMenuItemClicked) #maybe unnecessary?
		(var selfPlayer:gfx = "$datahub.getSingleEntity(CC.playerAvatar)")
		(var isSelf:bool = "selfPlayer.id == _entity.id")
		(var isBot:bool = "_entity && _entity.avatar.isBot")
		(var isContextMenuAvailable:bool = "!(isSelf || isBot)")
		(var mouse:gfx = "$datahub.getSingleComponent(CC.mouse)")
		(var isMouseActive:bool = "mouse.active" (event "mouse.evActiveChanged"))

		(macro TP_GET_PREF_BOOL _varName="'isDeadPlayersVisible'" _prefKey="TP_USERPREFS_KEY.DEAD_PLAYER_VISIBLE")

		(macro TP_GET_PREF_NUMBER "'blurAlpha'" "TP_USERPREFS_KEY.BLUR_ALPHA" _modifier="0.1" _default="0.0")
		(macro TP_GET_PREF_BOOL _varName="'isBlurMode'" _prefKey="TP_USERPREFS_KEY.BLUR_MODE")
		(macro TP_GET_PREF_BOOL _varName="'isBlurVisibleOnlyAlt'" _prefKey="TP_USERPREFS_KEY.BLUR_ALT_VISIBLE")
		(var camera:gfx = "$datahub.getSingleComponent(CC.camera)")
		(var altVision:bool = "camera ? camera.altVision : false" (event "camera.evAltVisionChanged"))
		(var isBlurVisible:bool = "isBlurVisibleOnlyAlt ? altVision : true")
	)
	#For tooltip
	(dispatch evHideInfotip args="{}" (bind trigger "isMouseActive") (event "evMenuItemClicked"))

	(style
		(backgroundColor = 0x00FFFFFF) #For seamless hittest. Do not use 0x01000000 because it will have a visible dark color!

		#(position = absolute) is required to separate the argument entity and the position of this element within parent layout.
		#With auto positioning, the layout of elements remains the same - but the argument entities change.
		#In that case, the spotted indicator or any element that uses (watch=false) variable within their scope can break.
		(position = absolute)
		(bind left "_isAlly ? 0 : auto")
		(bind right "_isAlly ? auto : 0")
		(bind top "_index == 0 ? 0 : (_index * (TP_PLAYER_ROW_SIZE.HEIGHT + 2)) + 2")
	)

	(bind visible "isDeadPlayersVisible ? true : isAlive")

	(element TP_ContrastPanel _isBlur="isBlurMode" _intensity="blurAlpha"
		(bind visible "isBlurVisible")
	)

	(element HorizontalDividerTwoPx
		(bind visible "_index == 0")
		(style
			(alpha = 2.0)
		)
	)
	#Ally: hblock, Enemy: reverse hblock
	(block
		(style
			(height = "TP_PLAYER_ROW_SIZE.HEIGHT")
		)

		(element TP_ShipHealthBarItem "_entity" "_isAlly" _userPrefsNum="_userPrefsNum")
		(hblock
			(style
				(align = "center|middle")
				(bind alpha "isAlive ? 1.0 : 0.4")
				(bind flow "_isAlly ? Flow.HORIZONTAL : Flow.REVERSE_HORIZONTAL")
			)
			(element TP_PlayerDivisionItem "_entity")
			(element TP_PlayerInfoItem "_entity" "_isAlly" _userPrefsNum="_userPrefsNum")
			(element TP_PlayerClanIconItem "_entity" "_isAlly" _userPrefsNum="_userPrefsNum")
			(element TP_ShipWeightItem "_entity" _userPrefsNum="_userPrefsNum") #For tournament
			(element TP_ShipTierItem "_entity" _userPrefsNum="_userPrefsNum")
			(element TP_ShipIconItem "_entity" "_isAlly" _userPrefsNum="_userPrefsNum")
			(element TP_ShipDetectionItem "_entity" _userPrefsNum="_userPrefsNum")
			(element TP_PlayerKillCountItem "_entity" _userPrefsNum="_userPrefsNum")
			(element TP_ShipConfigurationsItem "_entity" "_isAlly" _userPrefsNum="_userPrefsNum")
		)
	)
	
	#Tooltip for Detailed Ship Stats
	(controller $Tooltip
		(renderer = 'TP_TooltipShipConfigurationsItem')
		(args "_entity")
		(macro TP_TOOLTIP_BEHAVIOUR "_isAlly")
	)

	#Context Menu for Report/Compliment/Division
	(controller $Tooltip (renderer = 'ContextMenuPlayer')
		(bind enabled "isContextMenuAvailable")
		(args _playerEntity="_entity" _selfPlayer="selfPlayer")
		(macro DEFAULT_MENU_BEHAVIOUR "evHideInfotip" "1")
		(cache=false)
	)

	(element HorizontalDividerTwoPx
		(style
			(alpha = 2.0)
		)
	)
)

#Player Info
(def element TP_PlayerInfoItem (_entity:gfx, _isAlly:bool=false, _userPrefsNum:dict=null)
	(scope
		#bar width
		(macro TP_GET_PREF_NUMBER "'widthOffset'" "TP_USERPREFS_KEY.HEALTHBAR_WIDTH" _modifier="0.1" _default="0.5")
		(var widthScale:number = "1 + widthOffset - 0.5")
		(var widthSize:number = "TP_PLAYER_ROW_SIZE.WIDTH * widthScale - TP_DIVISION_ELEMENT_WIDTH") # - (division item width - 5). Canbe replaced with margin though
	)
	
	(style
		(align = "center|middle")
		(bind marginRight "_isAlly ? 5px : auto")
		(bind marginLeft "_isAlly ? auto : 5px")
		
		(bind width "widthSize")
		(height = "TP_PLAYER_ROW_SIZE.HEIGHT")
	)

	(vtile
		(style
			(width = 100%)
			(vgap = 2px)
		)
		(element TP_PlayerNameWithTagItem 	"_entity" _isAlly="_isAlly" _userPrefsNum="_userPrefsNum")
		(element TP_ShipNameItem 			"_entity" _isAlly="_isAlly" _userPrefsNum="_userPrefsNum")
	)
)

(def element TP_PlayerDivisionItem (_entity:gfx)
	(scope
		(var divisionMemberComponent:gfx = "_entity.hasComponent(CC.divisionMember) ? _entity.divisionMember : null")
		(var divisionSign:number = "divisionMemberComponent ? divisionMemberComponent.divisionSign : null" (event "divisionMemberComponent.evDivisionChanged"))
		(var isInSameDivision:bool = "divisionMemberComponent ? divisionMemberComponent.isInSameDivision : false" (event "divisionMemberComponent.evDivisionChanged"))
		(var division:number = "divisionMemberComponent ? divisionMemberComponent.division : 0" (event "divisionMemberComponent.evDivisionChanged"))
		(var isInDivision:bool = "division > 0")
		(var isDivisionHidden:bool = "divisionMemberComponent ? divisionMemberComponent.divisionHidden" (event "divisionMemberComponent.evDivisionHiddenChanged"))
		(var divisionIconIndex:number = "isInSameDivision ? (divisionSign + 1) : (divisionSign + 1 + 10)")
	)
	(style
		(width = "TP_DIVISION_ELEMENT_WIDTH")
		(align = "middle|center")
	)
	(mc division_item
		(bind visible "isInDivision && !isDivisionHidden")
		(bindcall gotoAndStop "divisionIconIndex" init=true)
	)
)

(def element TP_PlayerClanIconItem (_entity:gfx, _isAlly:bool=false, _userPrefsNum:dict=null)
	(scope
		(var clanComponent:gfx = "_entity.hasComponent(CC.clanman) ? _entity.clanman : null")
		(var clanId:number = "clanComponent ? clanComponent.clanId : null" (event "clanComponent.evClanIdChanged"))
		(var clanEntity:gfx = "$datahub.getPrimaryEntity(CC.clan, clanId)")
		(var clanName:str = "clanEntity ? clanEntity.clan.tag : null" (event "clanEntity.clan.evTagChanged"))
		(var clanIcon:str = "'url:../clan_icons/' + clanName + '.png'")
		(macro TP_GET_PREF_BOOL _varName="'isClanIconVisible'" _prefKey="TP_USERPREFS_KEY.CLAN_ICON" _default="false")
	)
	(style
		(align = "middle|center")
	)
	(bind visible "isClanIconVisible")
	(block
		(style
			(bind backgroundImage "clanIcon")
			(width = 24)
			(height = 24)
			#(backgroundSize = "fill")
		)
	)
)

(def element TP_PlayerNameWithTagItem (_entity:gfx, _isAlly:bool=false _userPrefsNum:dict=null)
	(scope
		(macro TP_GET_PREF_BOOL _varName="'isClanNameVisible'" _prefKey="TP_USERPREFS_KEY.CLAN_NAME")
		(var isInClan:bool = "_entity.hasComponent(CC.clanman)")
		(var clanComponent:gfx = "isInClan ? _entity.clanman : null")
		(var clanId:number = "clanComponent ? clanComponent.clanId : null" (event "clanComponent.evClanIdChanged"))
		(var clanEntity:gfx = "$datahub.getPrimaryEntity(CC.clan, clanId)")
		(var clanName:str = "clanEntity ? clanEntity.clan.tag : null" (event "clanEntity.clan.evTagChanged"))
		(var clanNameWithBrackets:str = "isInClan && isClanNameVisible ? '[' + clanName + ']' : ''")

		(macro TP_GET_PREF_BOOL _varName="'isPlayerNameVisible'" _prefKey="TP_USERPREFS_KEY.PLAYER_NAME")
		(var pureName:str = "isPlayerNameVisible ? _entity.avatar.pureName : ' '" (event "_entity.avatar.pureName"))
	)
	
	(style
		(width = 100%)
		(bind align "_isAlly ? left|middle : right|middle")
	)

	(bind visible "isClanNameVisible || isPlayerNameVisible")

	(tf
		(class $TextDefault13NM)
		(style
			(width = "100%")
			(elideMode = true)
			(bind textAlign "_isAlly ? left : right")
		)
		#(bind class "isAFK ? '$FontColorUnready' : tkStatus ? '$FontColorTeamkiller' : '$None'")
		(bind text "clanNameWithBrackets + pureName")
	)
)

(def element TP_PlayerKillCountItem (_entity:gfx, _userPrefsNum:dict=null)
	(scope
		(var killCount:number = "_entity.avatar.frags" (event "_entity.avatar.evFragsChanged"))
		(macro TP_GET_PREF_BOOL _varName="'isPlayerKillCountVisible'" _prefKey="TP_USERPREFS_KEY.KILL_COUNT")
	)
	(style
		(width = 18px)
		(align = "middle|center")
		(marginBottom = 2px)
	)
	(bind visible "isPlayerKillCountVisible")
	(tf
		(class $TextDefaultBoldNM)
		#(bind class "isAFK ? '$FontColorUnready' : tkStatus ? '$FontColorTeamkiller' : '$None'")
		(bind text "killCount ? killCount : ''")
	)
)

#Ship Info
(def element TP_ShipIconItem(_entity:gfx, _isAlly:bool=false, _userPrefsNum:dict=null)
	(scope
		(macro SHIP_MARKER_ICON_DATA "_entity.id")
		(var markerColorName:str = 
			"	!isAlive			? 'sunk' :
				isInSameDivision	? 'division' :
				tkStatus			? 'teamkiller' :
				'white'
		")

		(var iconName:str = "'icon_' + markerColorName + '_' + shipType")

		#(macro TP_GET_USERPREFS)
		(macro TP_GET_PREF_BOOL _varName="'isShipIconVisible'" _prefKey="TP_USERPREFS_KEY.SHIP_ICON")
		(macro TP_GET_PREF_NUMBER _varName="'shipIconColorIndex'" _prefKey="TP_USERPREFS_KEY.SHIP_ICON_COLOR" _modifier="1" _default="0")
		(var isColorAvailable:bool = "!(isInSameDivision || tkStatus)")
		(var colorPreset:dict = "(TP_SHIP_ICON_COLOR_PRESET.length > shipIconColorIndex) ? TP_SHIP_ICON_COLOR_PRESET[shipIconColorIndex] : null")
		(var colorDict:dict = "(isColorAvailable && colorPreset) ? colorPreset[subType] : {}")
	)

	(style
		(width = "SHIP_ICON_SIZE.WIDTH")
		(height = "SHIP_ICON_SIZE.HEIGHT")
		(bind scaleX "_isAlly ? 1.0 : -1.0")
		(pivotX = "SHIP_ICON_SIZE.WIDTH/2")
	)
	(bind visible "isShipIconVisible")

	(block
		(style
			(bind backgroundImage "'url:../battle_hud/markers/ship/' + iconName + '.png'")
		)
	)
	(block
		(bind colorTransform "colorDict")
		(style
			(bind backgroundImage "'url:../battle_hud/markers/ship/' + iconName + '.png'")
		)
	)
)

(def element TP_ShipNameItem(_entity:gfx, _isAlly:bool=false, _userPrefsNum:dict=null)
	(scope
		(var shipEntity:gfx = "_entity.avatar.ship.ref.ship" (event "_entity.avatar.evShipRefChanged"))
		(var shipName:str = "shipEntity ? shipEntity.nameIDS : ''") #IDS_PASB518
		(macro TP_GET_ISAFK)
		#(macro TP_GET_USERPREFS)
		(macro TP_GET_PREF_BOOL _varName="'isShipNameVisible'" _prefKey="TP_USERPREFS_KEY.SHIP_NAME")
	)

	(bind visible "isShipNameVisible")

	(style
		(bind align "_isAlly ? left|middle : right|middle")
		(width = 100%)
	)

	(tf
		(class $TextDefaultBoldNM)
		(bind class "isAFK ? '$FontColorUnready' : tkStatus ? '$FontColorTeamkiller' : '$None'")
		(style
			#(marginTop = "2")
			(width = 100%)
			(elideMode = true)
			(bind textAlign "_isAlly ? left : right")
		)
		(bind text "shipName")
	)
)

#For Tournamnet
(def element TP_ShipWeightItem(_entity:gfx, _userPrefsNum:dict=null)
	(scope
		(var shipEntity:gfx = "_entity.avatar.ship.ref.ship" (event "_entity.avatar.evShipRefChanged"))
		(var shipId:str = "shipEntity ? toString(shipEntity.id) : null") #uint long
		(var isShipWeightEnabled:bool = "TP_SHIPWEIGHT_DATA")
		(var shipWeight:str = "shipId ? (TP_SHIPWEIGHT_DATA && shipId in TP_SHIPWEIGHT_DATA) ? TP_SHIPWEIGHT_DATA[shipId] : '0' : ''") #uint long
		#(macro TP_GET_USERPREFS)
		#(macro TP_GET_PREF_BOOL _varName="'isShipTierVisible'" _prefKey="TP_USERPREFS_KEY.SHIP_TIER")
	)
	(style
		(width = 20px)
		(align = "center")
	)
	(bind visible "isShipWeightEnabled")
	(tf
		(class $TextDefaultBoldNM)
		(bind text "shipWeight")
	)
)
#

(def element TP_ShipTierItem(_entity:gfx, _userPrefsNum:dict=null)
	(scope
		(var shipEntity:gfx = "_entity.avatar.ship.ref.ship" (event "_entity.avatar.evShipRefChanged"))
		(var levelRome:str = "shipEntity ? shipEntity.levelRome : ''") #IDS_PASB518
		#(macro TP_GET_USERPREFS)
		(macro TP_GET_PREF_BOOL _varName="'isShipTierVisible'" _prefKey="TP_USERPREFS_KEY.SHIP_TIER")
	)
	(style
		(width = 22px)
		(align = "center")
	)
	(bind visible "isShipTierVisible")
	(tf
		(class $TextDefaultBoldNM)
		(style
			#(fontSize = 17)
		)
		(bind text "levelRome")
	)
)

(def element TP_ShipDetectionItem(_entity:gfx, _userPrefsNum:dict=null)
	(scope
		(var _markerEntity:gfx = "_entity")

		#map visible		
		(macro GET_MARKER_ENTITY_COMPONENT 'visibility')
		(var mapVisible:bool = "visibilityComponent ? visibilityComponent.mapVisible : false" (event "visibilityComponent.evChanged"))

		#relation
		(var playerAvatar:gfx = "$datahub.getSingleEntity(CC.playerAvatar)")
		(var isObserver:bool = "!playerAvatar")
		(macro GET_MARKER_ENTITY_COMPONENT 'relation')
		(var isAlly:bool = "relationComponent && isIn(relationComponent.value, [SC.Battle.PLAYER_RELATION.ALLY, SC.Battle.PLAYER_RELATION.SELF])" (event "relationComponent.evChanged"))

		#visibility flag
		(macro GET_MARKER_ENTITY_COMPONENT 'vehicle')
		(var visibilityFlag:bool = "vehicleComponent ? vehicleComponent.visibilityFlags : false" (event "vehicleComponent.evVisibilityFlagsChanged"))

		(var isMapVisibleEnabled:bool = "!(isAlly || isObserver)")
		(var isDetected:bool = "visibilityFlag || (isMapVisibleEnabled && mapVisible)")
		(var wasDetected:bool = "false" watch=false)
		(bind wasDetected "true" watch=false init=false (bind enabled "!(wasDetected) && isDetected") (event "vehicleComponent.evVisibilityFlagsChanged"))
		(macro GET_MARKER_ENTITY_COMPONENT 'health')
		(var isAlive:bool = "healthComponent ? healthComponent.isAlive : false" (event "healthComponent.evIsAliveChanged"))
		(macro TP_GET_PREF_BOOL _varName="'isShipDetectionVisible'" _prefKey="TP_USERPREFS_KEY.SHIP_DETECTION")
		(var iconColorTransform:dict = "isDetected  ? {redMultiplier:0,greenMultiplier:0,blueMultiplier:0,alphaMultiplier:1.0,redOffset:0xFF,greenOffset:0x99,blueOffset:0x33,alphaOffset:0 }
													: {redMultiplier:0,greenMultiplier:0,blueMultiplier:0,alphaMultiplier:0.6,redOffset:0xFF,greenOffset:0xFF,blueOffset:0xFF,alphaOffset:0 }")
	)
	(style
		(align = "center|middle")
		(bind alpha "_entity ? 1.0 : 0.0")
		(width = "14")
	)
	(bind visible "isShipDetectionVisible")
	(block
		(bind visible "isAlive && (isDetected || wasDetected)")
		(controller $Sector
			(bind color "0xFFFFFFFF")
			(bind arc "360")
			(bind radius "4")
		)
		(bind colorTransform "iconColorTransform")
	)
)

(def element TP_ShipHealthBarItem(_entity:gfx, _isAlly:bool=false, _userPrefsNum:dict=null)
	(scope
		#entity
		(var _markerEntity:gfx = "_entity")

		#multi teams
		(var customElementsVisibilityComponent:gfx = "$datahub.getSingleEntity(CC.customElementsVisibility)")
		(var enabledElements:number = "customElementsVisibilityComponent ? customElementsVisibilityComponent.customElementsVisibility.enabledElements : null" (event "customElementsVisibilityComponent.customElementsVisibility.evChanged"))
		(var isMultyTeamEnabled:bool = "(enabledElements & SC.Battle.CUSTOM_BATTLE_ELEMENTS.MULTYTEAMS) > 0")

		#health
		(macro GET_MARKER_ENTITY_COMPONENT 'health')
		(var healthValue:number = "healthComponent ? healthComponent.value : 0" (event "healthComponent.evValueChanged"))
		(var healthMax:number = "healthComponent ? healthComponent.max : 0" (event "healthComponent.evMaxChanged"))
		(var healthRatio:number = "healthMax ? healthValue / healthMax : 1")
		(var isAlive:bool = "healthComponent ? healthComponent.isAlive : false" (event "healthComponent.evIsAliveChanged"))

		#regeneration
		(macro GET_MARKER_ENTITY_COMPONENT 'dataComponent')
		(var regenMaxValue:number = "dataComponentComponent ? dataComponentComponent.data.maxValue : 0" (event "dataComponentComponent.evDataChanged"))
		(var regenRatio:number = "healthMax ? regenMaxValue / healthMax : 0")

		#relation
		(var teamId:number = "_markerEntity.avatar ? _markerEntity.avatar.teamId : 0" (event "_markerEntity.avatar.evTeamIdChanged"))
		(macro GET_MARKER_ENTITY_COMPONENT 'relation')
		(var relationValue:number = "relationComponent ? relationComponent.value : 0" (event "relationComponent.evChanged"))
		(var relationStr:str = "toLower(SC.Battle.PLAYER_RELATION.VALUE_TO_NAME[relationValue])")
		(var isAlly:bool = "relationComponent && isIn(relationComponent.value, [SC.Battle.PLAYER_RELATION.ALLY, SC.Battle.PLAYER_RELATION.SELF])" (event "relationComponent.evChanged"))

		#diplomacy
		(macro GET_MARKER_ENTITY_COMPONENT 'diplomacyRelation')
		(var diplomacyRelationValue:number = "diplomacyRelationComponent ? diplomacyRelationComponent.value : 0" (event "diplomacyRelationComponent.evChanged"))
		(var relationStrByDiplomacy:str = "DIPLOMACY_RELATION_TO_RELATION_STR[diplomacyRelationValue]")

		#bar color
		(macro TP_GET_PREF_NUMBER "'alphaScale'" "TP_USERPREFS_KEY.HEALTHBAR_OPACITY" _modifier="0.1" _default="0.4")
		(var regenBarColorTransform:dict = "{redMultiplier:0,greenMultiplier:0,blueMultiplier:0,alphaMultiplier:1.0,redOffset:230,greenOffset:230,blueOffset:230,alphaOffset:0 }")
		(var markerColorTransform:dict = 
			"	diplomacyRelationComponent	? TWO_TEAMS_COLOR_TRANSFORMS[relationStrByDiplomacy] :
				isAlly						? TWO_TEAMS_COLOR_TRANSFORMS['ally'] :
				isMultyTeamEnabled			? MULTI_TEAMS_COLOR_TRANSFORMS[teamId]
											: TWO_TEAMS_COLOR_TRANSFORMS[relationStr]"
		)

		#bar width
		(macro TP_GET_PREF_NUMBER "'widthOffset'" "TP_USERPREFS_KEY.HEALTHBAR_WIDTH" _modifier="0.1" _default="0.5")
		(var widthScale:number = "1 + widthOffset - 0.5")

	)

	(style
		(position = absolute)
		(bind scaleX "_isAlly ? 1.0 : -1.0")
		(bind left "_isAlly ? 0 : auto")
		(bind right "_isAlly ? auto : 0")
		(pivotX = "0")
		(pivotY = "0")
		(bind width "TP_PLAYER_ROW_SIZE.WIDTH * widthScale")
		(height = "TP_PLAYER_ROW_SIZE.HEIGHT")
		(align = "center|middle")
		(hitTest = false)
	)

	(block
		(class $WorldMarkerItemMargins)
		(style
			(width = "100%")
			(height = "100%")
			(align = "center|middle")
		)

		#(element InfotipSystemBlur)
		
		(block
			(class $FullsizeAbsolute)
			(style
				(backgroundImage = "'url:../battle_hud/markers/bar/bar_bg.png'")
				(backgroundSize = "fill")
				(scale9grid = [1, 1, 44, 2])
				(alpha = "0.8")
			)
		)

		(mc 'flash.display.Sprite'
			(class $FullsizeAbsolute)
			(element TP_HealthBarItem "regenBarColorTransform" "regenRatio")
			(element TP_HealthBarItem "markerColorTransform" "healthRatio")
			(blendMode = 'layer')
			(style
				(bind alpha "alphaScale")
				(bind scaleX "widthScale")
			)
			(bind visible "isAlive")
		)
	)
)

(def element TP_HealthBarItem(_colorTransform:dict, _scaleX:number)
	(block
		(class $FullsizeAbsolute)
		(macro DRAW_RECT "0" "0" "TP_PLAYER_ROW_SIZE.WIDTH" "TP_PLAYER_ROW_SIZE.HEIGHT")
		(bind colorTransform "_colorTransform")
		(bind scaleX "_scaleX")
	)
)

(def element TP_ContrastPanel(_isBlur:bool=false, _intensity:number="1.0")
	(scope
		(var panelElement:str = "_isBlur ? 'TP_ContrastPanelBlur' : 'TP_ContrastPanelNormal'")
	)
	(class $FullsizeAbsolute)
	(controller $Instance
		(bind renderer "panelElement")
		(args "_intensity")
	)
)

(def element TP_ContrastPanelNormal(_alpha:number=1.0)
	(class $FullsizeAbsolute)
	(mc hud_bar_bg_sliced
		(class $FullsizeAbsolute)
		(bind alpha "_alpha")
	)
)

(def element TP_ContrastPanelBlur(_blurIntensity:number=0.3)
	(class $FullsizeAbsolute)
	(element DeclareBlurLayer)
	(mc mc_blurmap_medium
		(class $FullsizeAbsolute)
		(rendererString = blurMeBaby)
		(macro TP_BIND_BLURINTENSITY "_blurIntensity")
	)
)

#--------------------------------------------------------------------------------
#TTXs
#--------------------------------------------------------------------------------
(def element TP_ShipConfigurationsItem(_entity:gfx, _isAlly:bool=false, _userPrefsNum:dict=null)
	(scope
		(var avatarId:number = "_entity.avatar.id")

		#Classic TTX
		(var ttxCollection:gfx = "$datahub.getCollection(CC.mods_ShipParamsInBattle)")
		(var ttxEntity:gfx = "$datahub.getPrimaryEntity(CC.mods_ShipParamsInBattle, avatarId)" (event "ttxCollection.evAdded"))

		#New TTX
		(var shipBattleInfoCollection:gfx = "$datahub.getCollection(CC.shipBattleInfo)")
		(var shipBattleInfoEntity:gfx = "$datahub.getPrimaryEntity(CC.shipBattleInfo, avatarId)" (event "shipBattleInfoCollection.evAdded"))
		(var shipBattleInfo:gfx = "shipBattleInfoEntity ? shipBattleInfoEntity.shipBattleInfo : null" (event "shipBattleInfoEntity.shipBattleInfo.evChanged"))

		(var isRealParams:bool = "shipBattleInfo ? shipBattleInfo.isRealParams : false")
		(var shipTTX:gfx = "isRealParams ? shipBattleInfo.shipTTX : ttxEntity.mods_ShipParamsInBattle.shipTTX")

		(macro TP_GET_PREF_BOOL _varName="'isVisibleOnlyAlt'" _prefKey="TP_USERPREFS_KEY.STATS_ALT_VISIBLE" _default="false")
		(var camera:gfx = "$datahub.getSingleComponent(CC.camera)")
		(var altVision:bool = "camera ? camera.altVision : false" (event "camera.evAltVisionChanged"))
	)

	(bind visible "isVisibleOnlyAlt ? altVision : true")

	(hblock
		(style
			(align = "middle|center")
			(bind flow "_isAlly ? Flow.HORIZONTAL : Flow.REVERSE_HORIZONTAL")
			(height = "TP_PLAYER_ROW_SIZE.HEIGHT")
		)
		(element TP_ShipConfigVisibilityItem "shipTTX" _avatarEntity="_entity" _isRealParams="isRealParams" _userPrefsNum="_userPrefsNum")
		(element TP_ShipConfigMobilityItem "shipTTX" _userPrefsNum="_userPrefsNum")
		(element TP_ShipConfigAirSupportItem "shipTTX" _userPrefsNum="_userPrefsNum")
		(element TP_ShipConfigAirDefenseItem "shipTTX" _userPrefsNum="_userPrefsNum")
		(element TP_ShipConfigAtbaItem "shipTTX" _avatarEntity="_entity" _isRealParams="isRealParams" _userPrefsNum="_userPrefsNum") #Forces shipBattleInfoTTX so it always shows the max dist for the enemy
		(element TP_ShipConfigArtilleryItem "shipTTX" _userPrefsNum="_userPrefsNum")
		(element TP_ShipConfigTorpedoItem "shipTTX" _userPrefsNum="_userPrefsNum")
		#(element TP_ShipConfigBatteryItem "shipTTX")
		(element TP_ShipConfigSurfaceConsumableItem "shipTTX" _avatarEntity="_entity" _userPrefsNum="_userPrefsNum")
		(element TP_ShipConfigSubmarineConsumableItem "shipTTX" _avatarEntity="_entity" _userPrefsNum="_userPrefsNum")
	)
)

(def element TP_ShipConfigArtilleryItem(_shipTTX:gfx, _userPrefsNum:dict=null)
	(scope
		(var artilleryTTX:gfx = "_shipTTX.artillery")
		(var hasMainGun:bool = "artilleryTTX ? artilleryTTX.mainGun.length > 0 : false")
		(var range:number = "artilleryTTX ? artilleryTTX.mgMaxDist.value : null")
		(var reload:number = "artilleryTTX ? artilleryTTX.mgReloadTime.value : null")
		#(macro TP_GET_USERPREFS)
		(macro TP_GET_PREF_BOOL _varName="'isArtilleryRangeVisible'" _prefKey="TP_USERPREFS_KEY.ARTILLERY_RANGE")
		(macro TP_GET_PREF_BOOL _varName="'isArtilleryReloadVisible'" _prefKey="TP_USERPREFS_KEY.ARTILLERY_RELOAD")
		(var isEnabled:bool = "isArtilleryRangeVisible || isArtilleryReloadVisible")
	)

	(bind visible "isEnabled")
	(style
		(bind alpha "hasMainGun ? 1.0 : 0.0")
		#(width = "TP_SHIPCONFIG_ELEMENT_WIDTH.WITH_UNIT")
	)

	(style
		(align = "middle|center")
	)
	(block
		(element TP_ShipConfigTextItem _value="range" _unit="'km'" _userPrefsNum="_userPrefsNum"
			(bind visible "isArtilleryRangeVisible")
		)
		(element TP_ShipConfigTextItem _value="reload" _unit="'s'" _userPrefsNum="_userPrefsNum"
			(bind visible "isArtilleryReloadVisible")
		)
	)
)

(def element TP_ShipConfigTorpedoItem(_shipTTX:gfx, _userPrefsNum:dict=null)
	(scope
		#Surface Torps
		(var torpedoesTTX:gfx = "_shipTTX.torpedoes")
		#normal torps
		(var torpedoTTX:gfx = "torpedoesTTX ? torpedoesTTX.torpedo : null")
		(var torpedoRange:number = "torpedoTTX ? torpedoTTX.maxDist.value : null")
		(var torpedoRangeStr:str = "torpedoTTX ? formatFloatingPoint(torpedoRange, 1) : ''")
		#deepwater torps
		(var torpedoDeepwaterTTX:gfx = "torpedoesTTX ? torpedoesTTX.torpedoDeepwater : null")
		(var torpedoDeepwaterRange:number = "torpedoDeepwaterTTX ? torpedoDeepwaterTTX.maxDist.value : null")
		(var torpedoDeepwaterRangeStr:str = "torpedoDeepwaterTTX ? formatFloatingPoint(torpedoDeepwaterRange, 1) : ''")
		#alt torps
		(var torpedoAltTTX:gfx = "torpedoesTTX ? torpedoesTTX.torpedoAlt : null")
		(var torpedoAltRange:number = "torpedoAltTTX ? torpedoAltTTX.maxDist.value : null")
		(var torpedoAltRangeStr:str = "torpedoAltTTX ? formatFloatingPoint(torpedoAltRange, 1) : ''")
		#all ranges
		(var ranges:str = "	torpedoRangeStr + 
							(torpedoRange && torpedoDeepwaterRange ? '/' : '') + torpedoDeepwaterRangeStr +
							(((torpedoRange || torpedoDeepwaterRange) && torpedoAltRange) ? '/' : '') + torpedoAltRangeStr
		")

		#(var reload:number = "torpedoesTTX.reloadTime.value")


		#Submarine torps
		(var torpedoGroupsTTX:gfx = "_shipTTX.torpedoGroups")
		#normal torps
		(var subTorpedoTTX:gfx = "torpedoGroupsTTX ? torpedoGroupsTTX.torpedo : null")
		(var subTorpedoRange:number = "subTorpedoTTX ? subTorpedoTTX.maxDist.value : null")
		#deepwater torps
		(var subTorpedoDeepwaterTTX:gfx = "torpedoGroupsTTX ? torpedoGroupsTTX.torpedoDeepwater : null")
		(var subTorpedoDeepwaterRange:number = "subTorpedoDeepwaterTTX ? subTorpedoDeepwaterTTX.maxDist.value : null")
		#alt torps
		(var subTorpedoAltTTX:gfx = "torpedoGroupsTTX ? torpedoGroupsTTX.torpedoAlt : null")
		(var subTorpedoAltRange:number = "subTorpedoAltTTX ? subTorpedoAltTTX.maxDist.value : null")

		#(var reload:number = "torpedoGroupsTTX.reloadTime.value")

		
		(macro TP_GET_PREF_BOOL _varName="'isTorpedoRangeVisible'" _prefKey="TP_USERPREFS_KEY.TORPEDO_RANGE")
		#(macro TP_GET_PREF_BOOL _varName="'isTorpedoReloadVisible'" _prefKey="TP_USERPREFS_KEY.TORPEDO_RELOAD")
		(var isEnabled:bool = "isTorpedoRangeVisible")
	)

	(bind visible "isEnabled")
	(style
		(bind alpha "torpedoesTTX || torpedoGroupsTTX ? 1.0 : 0.0")
		#(width = "TP_SHIPCONFIG_ELEMENT_WIDTH.WITH_UNIT")
	)

	(style
		(align = "middle|center")
	)
	(block
		(element TP_ShipConfigTextItem _value="torpedoRange" _unit="'km'" _userPrefsNum="_userPrefsNum"
			(bind visible "!(torpedoesTTX || torpedoGroupsTTX) || torpedoRange") #shows if there is no torp just for margin
		)
		(element TP_ShipConfigTextItem _value="torpedoDeepwaterRange" _unit="'km'" _userPrefsNum="_userPrefsNum"
			(bind visible "torpedoDeepwaterRange")
		)
		(element TP_ShipConfigTextItem _value="torpedoAltRange" _unit="'km'" _userPrefsNum="_userPrefsNum"
			(bind visible "torpedoAltRange")
		)

		(element TP_ShipConfigTextItem _value="subTorpedoRange" _unit="'km'" _userPrefsNum="_userPrefsNum"
			(bind visible "subTorpedoRange") #shows if there is no torp just for margin
		)
		(element TP_ShipConfigTextItem _value="subTorpedoDeepwaterRange" _unit="'km'" _userPrefsNum="_userPrefsNum"
			(bind visible "subTorpedoDeepwaterRange")
		)
		(element TP_ShipConfigTextItem _value="subTorpedoAltRange" _unit="'km'" _userPrefsNum="_userPrefsNum"
			(bind visible "subTorpedoAltRange")
		)
		# (element TP_ShipConfigTextItem _value="reload" _unit="'s'" _userPrefsNum="_userPrefsNum"
		# 	(bind visible "isTorpedoReloadVisible")
		# )
	)
)

(def element TP_ShipConfigAtbaItem(_shipTTX:gfx, _avatarEntity:gfx, _isRealParams:bool, _userPrefsNum:dict=null)
	(scope
		(var artilleryTTX:gfx = "_shipTTX.artillery")
		(var hasSecondaryGun:bool = "artilleryTTX ? artilleryTTX.atba.length > 0 : false")
		(var range:number = "artilleryTTX ? artilleryTTX.atbaMaxDist.value : null")
		#(macro TP_GET_USERPREFS)
		(macro TP_GET_PREF_BOOL _varName="'isAtbaRangeVisible'" _prefKey="TP_USERPREFS_KEY.ATBA_RANGE")
		(var isEnabled:bool = "isAtbaRangeVisible")
		
		#fix for skill---------------------
		(var selfPlayer:gfx = "$datahub.getSingleEntity(CC.playerAvatar)")
		(var avatarComponent:gfx = "_avatarEntity.avatar")

		#shipId -> ownShip (ship in port) -> crewId (crew on board) -> crewSkill (check crew has skill)
		(var isSelf:bool = "selfPlayer.avatar.id == avatarComponent.id")
		(var shipId:number = "avatarComponent ? avatarComponent.ship.ref.ship.id : null" (event "avatarComponent.evShipRefChanged"))
		(var shipType:str = "avatarComponent ? avatarComponent.shipType : null" (event "avatarComponent.evShipTypeChanged"))
		(var ownShipEntity:gfx = "$datahub.getPrimaryEntity(CC.ownShip, shipId)")

		(var skillId:number = "shipType in TP_ATBA_SKILL_ID ? TP_ATBA_SKILL_ID[shipType] : null")
		(var skillEntity:gfx = "$datahub.getPrimaryCompositeEntity(CC.skill, skillId, shipType, TP_ATBA_CREW_ID)")
		
		(var crewId:number = "ownShipEntity ? ownShipEntity.ownShip.crewId : null" (event "ownShipEntity.ownShip.evCrewChanged"))
		(var crewSkillEntity:gfx = "$datahub.getPrimaryCompositeEntity(CC.crewSkill, crewId, skillEntity.id)")
		#(crewId, skill) -> rutrns crewSkill if the crew is onboard and has skill

		(var isCorrectionNeeded:bool = "!(crewSkillEntity || isSelf || _isRealParams)")

		(var modifiers:dict = "skillEntity ? skillEntity.attributes.modifiers : null")
		(var rangeModifier:number = "isCorrectionNeeded && modifiers ? (1 + modifiers.GSMaxDist * 0.01) : 1.0") #value is negative and %
		#---------------------

		#fix------------------
		(var modifiedAtbaRange:number = "range * rangeModifier") #CAPTAIN SKILL FIX
		#---------------------
	)

	(bind visible "isEnabled")
	(style
		(bind alpha "hasSecondaryGun ? 1.0 : 0.0")
		#(width = "TP_SHIPCONFIG_ELEMENT_WIDTH.WITH_UNIT")
	)

	(style
		(align = "middle|center")
	)
	(block
		(element TP_ShipConfigTextItem _value="modifiedAtbaRange" _unit="'km'" _userPrefsNum="_userPrefsNum"
			(bind visible "isAtbaRangeVisible")
		)
	)
)

(def element TP_ShipConfigAirDefenseItem(_shipTTX:gfx, _userPrefsNum:dict=null)
	(scope
		(var airDefenseTTX:gfx = "_shipTTX.airDefense")
		(var range:number = "airDefenseTTX ? airDefenseTTX.averageAura.maxDist.value : null")
		(var integralValue:number = "airDefenseTTX ? airDefenseTTX.integralValue.value : 0")
		(macro TP_GET_PREF_BOOL _varName="'isAntiAirRangeVisible'" _prefKey="TP_USERPREFS_KEY.ANTIAIR_RANGE")
		(macro TP_GET_PREF_BOOL _varName="'isAntiAirRatingVisible'" _prefKey="TP_USERPREFS_KEY.ANTIAIR_RATE")
		(var isEnabled:bool = "isAntiAirRangeVisible || isAntiAirRatingVisible")
	)

	(bind visible "isEnabled")
	(style
		(bind alpha "airDefenseTTX ? 1.0 : 0.0")
		#(width = "TP_SHIPCONFIG_ELEMENT_WIDTH.WITH_UNIT")
	)

	(style
		(align = "middle|center")
	)
	(block
		(element TP_ShipConfigTextItem _value="range" _unit="'km'" _userPrefsNum="_userPrefsNum"
			(bind visible "isAntiAirRangeVisible")
		)
		(element TP_ShipConfigTextItem _value="integralValue" _unit="'AA'" _roundDigit=0 _userPrefsNum="_userPrefsNum"
			(bind visible "isAntiAirRatingVisible")
		)
	)
)

(def element TP_ShipConfigAirSupportItem(_shipTTX:gfx, _userPrefsNum:dict=null)
	(scope
		(var airSupportTTX:gfx = "_shipTTX.airSupport")
		(var range:number = "airSupportTTX ? airSupportTTX.maxDist.value : null")
		(var reload:number = "airSupportTTX ? airSupportTTX.reloadTime.value : null")
		#(macro TP_GET_USERPREFS)
		(macro TP_GET_PREF_BOOL _varName="'isAirSupportRangeVisible'" _prefKey="TP_USERPREFS_KEY.AIRSUPPORT_RANGE")
		(macro TP_GET_PREF_BOOL _varName="'isAirSupportReloadVisible'" _prefKey="TP_USERPREFS_KEY.AIRSUPPORT_RELOAD")
		(var isEnabled:bool = "isAirSupportRangeVisible || isAirSupportReloadVisible")
	)

	(bind visible "isEnabled")
	(style
		(bind alpha "airSupportTTX ? 1.0 : 0.0")
		#(width = "TP_SHIPCONFIG_ELEMENT_WIDTH.WITH_UNIT")
	)

	(style
		(align = "middle|center")
	)
	(block
		(element TP_ShipConfigTextItem _value="range" _unit="'km'" _userPrefsNum="_userPrefsNum"
			(bind visible "isAirSupportRangeVisible")
		)
		(element TP_ShipConfigTextItem _value="reload" _unit="'s'" _userPrefsNum="_userPrefsNum"
			(bind visible "isAirSupportReloadVisible")
		)
	)
)

(def element TP_ShipConfigBatteryItem(_shipTTX:gfx)
	(scope
		(var batteryTTX:gfx = "_shipTTX.mods_ShipParamsInBattle.shipTTX.battery")
		(var capacity:number = "batteryTTX ? batteryTTX.capacity.value : null")
	)

	#(bind visible "batteryTTX")
	(style
		(bind alpha "batteryTTX ? 1.0 : 0.0")
		(width = "TP_SHIPCONFIG_ELEMENT_WIDTH.WITH_UNIT")
	)

	(style
		(align = "middle|center")
	)
	(block
		(element TP_ShipConfigTextItem _value="capacity" _unit="'s'" _userPrefsNum="_userPrefsNum")
	)
)

(def element TP_ShipConfigMobilityItem(_shipTTX:gfx, _userPrefsNum:dict=null)
	(scope
		#surface speed
		(var mobilityTTX:gfx = "_shipTTX.mobility")
		(var surfaceSpeed:number = "mobilityTTX ? mobilityTTX.speed.value : null")

		#underwater speed
		(var underwaterMobilityTTX:gfx = "_shipTTX.underwaterMobility")
		(var underwaterSpeed:number = "underwaterMobilityTTX ? underwaterMobilityTTX.speed.value : null")

		#(macro TP_GET_USERPREFS)
		(macro TP_GET_PREF_BOOL _varName="'isSurfaceMobilityVisible'" _prefKey="TP_USERPREFS_KEY.SPEED_SURFACE")
		(macro TP_GET_PREF_BOOL _varName="'isUnderwaterMobilityVisible'" _prefKey="TP_USERPREFS_KEY.SPEED_UNDERWATER")
		(var isEnabled:bool = "isSurfaceMobilityVisible || isUnderwaterMobilityVisible")
	)

	(bind visible "isEnabled")
	(style
		(bind alpha "mobilityTTX || underwaterMobilityTTX ? 1.0 : 0.0")
		#(width = "TP_SHIPCONFIG_ELEMENT_WIDTH.WITH_UNIT")
	)

	(style
		(align = "middle|center")
	)
	(block
		(element TP_ShipConfigTextItem _value="surfaceSpeed" _unit="'kts'" _userPrefsNum="_userPrefsNum"
			(bind visible "isSurfaceMobilityVisible")
		)
		(element TP_ShipConfigTextItem _value="underwaterSpeed" _unit="'kts'" _userPrefsNum="_userPrefsNum"
			(bind visible "isUnderwaterMobilityVisible")
		)
	)
)

(def element TP_ShipConfigVisibilityItem(_shipTTX:gfx, _avatarEntity:gfx, _isRealParams:bool, _userPrefsNum:dict=null)
	(scope
		#fix for skill---------------------
		(var selfPlayer:gfx = "$datahub.getSingleEntity(CC.playerAvatar)")
		(var avatarComponent:gfx = "_avatarEntity.avatar")

		#shipId -> ownShip (ship in port) -> crewId (crew on board) -> crewSkill (check crew has skill)
		(var isSelf:bool = "selfPlayer.avatar.id == avatarComponent.id")
		(var shipId:number = "avatarComponent ? avatarComponent.ship.ref.ship.id : null" (event "avatarComponent.evShipRefChanged"))
		(var shipType:str = "avatarComponent ? avatarComponent.shipType : null" (event "avatarComponent.evShipTypeChanged"))
		(var ownShipEntity:gfx = "$datahub.getPrimaryEntity(CC.ownShip, shipId)")

		(var skillId:number = "shipType in TP_CONCEALMENT_SKILL_ID ? TP_CONCEALMENT_SKILL_ID[shipType] : null")
		(var skillEntity:gfx = "$datahub.getPrimaryCompositeEntity(CC.skill, skillId, shipType, TP_CONCEALMENT_CREW_ID)")
		
		(var crewId:number = "ownShipEntity ? ownShipEntity.ownShip.crewId : null" (event "ownShipEntity.ownShip.evCrewChanged"))
		(var crewSkillEntity:gfx = "$datahub.getPrimaryCompositeEntity(CC.crewSkill, crewId, skillEntity.id)")
		#(crewId, skill) -> rutrns crewSkill if the crew is onboard and has skill

		(var isCorrectionNeeded:bool = "!(crewSkillEntity || isSelf || _isRealParams)")

		(var modifiers:dict = "skillEntity ? skillEntity.attributes.modifiers : null")
		(var visibilityModifier:number = "isCorrectionNeeded && modifiers ? (1 + modifiers.visibilityDistCoeff * 0.01) : 1.0") #value is negative and %
		#---------------------

		#ttx
		(var visibilityTTX:gfx = "_shipTTX.visibility")
		(var visibilityByShip:number = "visibilityTTX ? visibilityTTX.visibilityByShip.normal.value : null") #CAPTAIN SKILL FIX
		(var visibilityByPlane:number = "visibilityTTX ? visibilityTTX.visibilityByPlane.normal.value : null") #CAPTAIN SKILL FIX

		#fix------------------
		(var modifiedVisibilityByShip:number = "visibilityByShip * visibilityModifier") #CAPTAIN SKILL FIX
		(var modifiedVisibilityByPlane:number = "visibilityByPlane * visibilityModifier") #CAPTAIN SKILL FIX
		#---------------------

		#(macro TP_GET_USERPREFS)
		(macro TP_GET_PREF_BOOL _varName="'isVisibilityByShipVisible'" _prefKey="TP_USERPREFS_KEY.VISIBILITY_SURFACE")
		(macro TP_GET_PREF_BOOL _varName="'isVisibilityByPlaneVisible'" _prefKey="TP_USERPREFS_KEY.VISIBILITY_AIR")
		(var isEnabled:bool = "isVisibilityByShipVisible || isVisibilityByPlaneVisible")
	)

	(bind visible "isEnabled")
	(style
		(bind alpha "visibilityTTX ? 1.0 : 0.0")
		#(width = "TP_SHIPCONFIG_ELEMENT_WIDTH.WITH_UNIT")
	)

	(style
		(align = "middle|center")
	)
	(block
		(element TP_ShipConfigTextItem _value="modifiedVisibilityByShip" _unit="'km'" _userPrefsNum="_userPrefsNum"
			(bind visible "isVisibilityByShipVisible")
		)
		(element TP_ShipConfigTextItem _value="modifiedVisibilityByPlane" _unit="'km'" _userPrefsNum="_userPrefsNum"
			(bind visible "isVisibilityByPlaneVisible")
		)
	)
)

(def element TP_ShipConfigSurfaceConsumableItem(_shipTTX:gfx, _avatarEntity:gfx, _userPrefsNum:dict=null)
	(scope
		(var shipId:str = "_avatarEntity ? toString(_avatarEntity.avatar.ship.ref.ship.id) : null" (event "_avatarEntity.avatar.evShipRefChanged"))
		(var consumables:dict = "shipId in TP_CONSUMABLES_DATA ? TP_CONSUMABLES_DATA[shipId] : null")
		(var radarRange:number = "consumables && 'rls' in consumables ? consumables['rls'] : null")
		(var hydroRange:number = "consumables && 'sonar' in consumables ? consumables['sonar'] : null")

		(macro TP_GET_PREF_BOOL _varName="'isRadarRangeVisible'" _prefKey="TP_USERPREFS_KEY.RADAR_RANGE")
		(macro TP_GET_PREF_BOOL _varName="'isHydroRangeVisible'" _prefKey="TP_USERPREFS_KEY.HYDRO_RANGE")
		(var isEnabled:bool = "isRadarRangeVisible || isHydroRangeVisible")
	)

	(bind visible "isEnabled")
	(style
		(bind alpha "consumables ? 1.0 : 0.0")
	)

	(style
		(align = "middle|center")
	)
	(block
		(element TP_ShipConfigTextItem _value="hydroRange" _unit="'km'" _userPrefsNum="_userPrefsNum" _showNull=true
			(bind visible "isHydroRangeVisible")
		)
		(element TP_ShipConfigTextItem _value="radarRange" _unit="'km'" _userPrefsNum="_userPrefsNum" _showNull=true
			(bind visible "isRadarRangeVisible")
		)
	)
)

(def element TP_ShipConfigSubmarineConsumableItem(_shipTTX:gfx, _avatarEntity:gfx, _userPrefsNum:dict=null)
	(scope
		(var shipId:str = "_avatarEntity ? toString(_avatarEntity.avatar.ship.ref.ship.id) : null" (event "_avatarEntity.avatar.evShipRefChanged"))
		(var consumables:dict = "shipId in TP_CONSUMABLES_DATA ? TP_CONSUMABLES_DATA[shipId] : null")
		(var radarRange:number = "consumables && 'submarineLocator' in consumables ? consumables['submarineLocator'] : null")
		(var hydroRange:number = "consumables && 'hydrophone' in consumables ? consumables['hydrophone'] : null")

		(macro TP_GET_PREF_BOOL _varName="'isSubRadarRangeVisible'" _prefKey="TP_USERPREFS_KEY.SUB_RADAR_RANGE")
		(macro TP_GET_PREF_BOOL _varName="'isSubHydroRangeVisible'" _prefKey="TP_USERPREFS_KEY.SUB_HYDRO_RANGE")
		(var isEnabled:bool = "isSubRadarRangeVisible || isSubHydroRangeVisible")
	)

	(bind visible "isEnabled")
	(style
		(bind alpha "consumables ? 1.0 : 0.0")
	)

	(style
		(align = "middle|center")
	)
	(block
		(element TP_ShipConfigTextItem _value="hydroRange" _unit="'km'" _userPrefsNum="_userPrefsNum" _showNull=true
			(bind visible "isSubHydroRangeVisible")
		)
		(element TP_ShipConfigTextItem _value="radarRange" _unit="'km'" _userPrefsNum="_userPrefsNum" _showNull=true
			(bind visible "isSubRadarRangeVisible")
		)
	)
)

#Image Item
(def element TP_ShipConfigImageItem (_iconPath:str, _alpha:number="1.0", _isVisible:bool=true, _userPrefsNum:dict=null)
	(scope
		#(var isValueVisible:bool = "_value || _showZero")
		#(macro TP_GET_USERPREFS)
		(macro TP_GET_PREF_BOOL _varName="'isUnitVisible'" _prefKey="TP_USERPREFS_KEY.UNITS_VISIBLE")
	)
	(bind visible "_isVisible")
	(style
		(bind width "isUnitVisible ? TP_SHIPCONFIG_ELEMENT_WIDTH.WITH_UNIT : TP_SHIPCONFIG_ELEMENT_WIDTH.NO_UNIT")
		(align = "middle|center")
		(bind alpha "_alpha")
	)
	(block
		(style
			(height = 20)
			(width = 20)
			(bind backgroundImage "_iconPath")
			(backgroundSize = "fill")
		)
	)
)

#Text Item
(def element TP_ShipConfigTextItem (_value:number, _unit:str=null, _showZero:bool=false, _showNull:bool=false, _roundDigit:number="1.0", _userPrefsNum:dict=null)
	(scope
		(var isNull:bool = "_value == null")
		(var isZero:bool = "_value == 0")
		(var isValueVisible:bool = "(isNull && _showNull) || (isZero && _showZero) || _value")
		#(macro TP_GET_USERPREFS)
		(macro TP_GET_PREF_BOOL _varName="'isUnitVisible'" _prefKey="TP_USERPREFS_KEY.UNITS_VISIBLE")
	)

	(style
		(bind marginBottom "isValueVisible ? 2px : 0")
		#(width = 45px)
		(bind width "isUnitVisible ? TP_SHIPCONFIG_ELEMENT_WIDTH.WITH_UNIT : TP_SHIPCONFIG_ELEMENT_WIDTH.NO_UNIT")
		(align = "right")
	)
	(hblock
		(bind visible "isValueVisible")
		(style
			(marginRight = "XS")
		)
		(tf
			(class $TextDefault13NM)
			(style
				(marginRight = "XS")
			)
			(bind text "isNull ? ' ' : formatFloatingPoint(_value, _roundDigit)")
		)
		(tf
			(bind visible "isUnitVisible")
			(class $TextDefault13NM)
			(bind text "isNull ? ' ' : _unit")
			(alpha = "TC")
			(style
				(width = "20px")
			)
		)
	)
)

#--------------------------------------------------------------------------------
#Tooltip Items
#--------------------------------------------------------------------------------
(def element TP_TooltipShipConfigurationsItem(_entity:gfx, _userPrefsNum:dict=null)
	(scope
		(var avatarId:number = "_entity.avatar.id")

		#Classic TTX
		(var ttxCollection:gfx = "$datahub.getCollection(CC.mods_ShipParamsInBattle)")
		(var ttxEntity:gfx = "$datahub.getPrimaryEntity(CC.mods_ShipParamsInBattle, avatarId)" (event "ttxCollection.evAdded"))

		#New TTX
		(var shipBattleInfoCollection:gfx = "$datahub.getCollection(CC.shipBattleInfo)")
		(var shipBattleInfoEntity:gfx = "$datahub.getPrimaryEntity(CC.shipBattleInfo, avatarId)" (event "shipBattleInfoCollection.evAdded"))
		(var shipBattleInfo:gfx = "shipBattleInfoEntity ? shipBattleInfoEntity.shipBattleInfo : null" (event "shipBattleInfoEntity.shipBattleInfo.evChanged"))

		(var isRealParams:bool = "shipBattleInfo ? shipBattleInfo.isRealParams : false")
		(var shipTTX:gfx = "isRealParams ? shipBattleInfo.shipTTX : ttxEntity.mods_ShipParamsInBattle.shipTTX")
	)

	(style
		(align = "middle|center")
		(hitTest = false)
	)

	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND)

	(element TOOLTIP_SYSTEM_DEFAULT_CONTAINER
		(style
			(vgap = 10px)
			(width = 300px)
		)
		(element TP_TooltipArtilleryItem "shipTTX")
		(element TP_TooltipAtbaItem "shipTTX" _avatarEntity="_entity" _isRealParams="isRealParams")
		(element TP_TooltipTorpedoItem "shipTTX")
		(element TP_TooltipAirDefenseItem "shipTTX")
		(element TP_TooltipAirSupportItem "shipTTX")
		(element TP_TooltipDepthChargeItem "shipTTX")
		(element TP_TooltipMobilityItem "shipTTX")
		(element TP_TooltipVisibilityItem "shipTTX" _avatarEntity="_entity" _isRealParams="isRealParams")
		(element TP_TooltipConsumableItem "shipBattleInfo")
	)
)

(def element TP_TooltipArtilleryItem(_shipTTX:gfx, _userPrefsNum:dict=null)
	(scope
		(var artilleryTTX:gfx = "_shipTTX.artillery")
		(var mainGunTTX:array = "artilleryTTX ? artilleryTTX.mainGun : null")
		(var hasMainGun:bool = "mainGunTTX.length > 0")
		(var range:number = "artilleryTTX ? artilleryTTX.mgMaxDist.value : null")
		(var reload:number = "artilleryTTX ? artilleryTTX.mgReloadTime.value : null")

		#awful code. someone must fix this not me
		#repeat didn't work out well though
		(var numBarrels1:number = "hasMainGun ? mainGunTTX[0].numBarrels.value * mainGunTTX[0].numGuns.value : 0")
		(var numBarrels2:number = "mainGunTTX.length > 1 ? mainGunTTX[1].numBarrels.value * mainGunTTX[1].numGuns.value : 0")
		(var numBarrels3:number = "mainGunTTX.length > 2 ? mainGunTTX[2].numBarrels.value * mainGunTTX[2].numGuns.value : 0")
		(var numBarrels4:number = "mainGunTTX.length > 3 ? mainGunTTX[3].numBarrels.value * mainGunTTX[3].numGuns.value : 0")
		(var totalBarrelsCount:number = "numBarrels1 + numBarrels2 + numBarrels3 + numBarrels4")
		(var shellsPerMin:number = "totalBarrelsCount * (60 / reload) * 0.33")

		(var altFire:gfx = "artilleryTTX ? artilleryTTX.altFireMode : null")
		(var altFireShots:number = "altFire ? altFire.numShots.value : null")
		(var altFireReload:number = "altFire ? altFire.reloadTime.value : null")

		(var ammoHE:gfx = "artilleryTTX ? artilleryTTX.ammoHE : null")
		(var ammoCS:gfx = "artilleryTTX ? artilleryTTX.ammoCS : null")
		(var ammoAP:gfx = "artilleryTTX ? artilleryTTX.ammoAP : null")

		(var pircingHE:number = "ammoHE ? ammoHE.piercing.value : null")
		(var pircingCS:number = "ammoCS ? ammoCS.piercing.value : null")
		(var pircingAP:number = "ammoAP ? ammoAP.piercing.value * 0.001 : null")

		(var damageHE:number = "ammoHE ? ammoHE.damage.value : 0")
		(var damageCS:number = "ammoCS ? ammoCS.damage.value : 0")
		(var damageAP:number = "ammoAP ? ammoAP.damage.value : 0")

		(var damagePerMinHE:number = "damageHE * shellsPerMin")
		(var damagePerMinCS:number = "damageCS * shellsPerMin")
		(var damagePerMinAP:number = "damageAP * shellsPerMin")

		(var caliber:number = "hasMainGun ? mainGunTTX[0].caliber.value : 0")
		(var overmatch:number = "hasMainGun ? floor(caliber / 14.3) : 0")
	)

	(style
		(align = "middle|center")
	)
	(bind visible "hasMainGun")

	(vtile
		(style
			(vgap = "TP_TOOLTIP_ELEMENTS_VGAP")
		)

		(element TP_TooltipShipConfigTitleItem _title="'IDS_SHIP_PARAM_MAIN_GUN'")

		(block
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_MAX_DIST'" _value="range" _unit="'km'" _userPrefsNum="_userPrefsNum")
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_SHOT_DELAY'" _value="reload" _unit="'s'" _userPrefsNum="_userPrefsNum")
		)

		(block
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_ARTILLERY_CALIBER'" _value="caliber" _roundDigit=0 _unit="'mm'" _userPrefsNum="_userPrefsNum")
			(element TP_TooltipShipConfigTextItem _title="'Overmatch'" _value="overmatch" _roundDigit=0 _unit="'mm'" _userPrefsNum="_userPrefsNum")
		)

		(block
			(bind visible "altFire")
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_BURST_FIRE_SALVO_COUNT'" _value="altFireShots" _roundDigit=0 _unit=null _userPrefsNum="_userPrefsNum")
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_BURST_FIRE_RELOAD_TIME'" _value="altFireReload" _unit="'s'" _userPrefsNum="_userPrefsNum")
		)

		(block
			(element TP_TooltipShipConfigTextItem _title="'HE DPM'" _value="damagePerMinHE" _roundDigit=0 _unit=null _userPrefsNum="_userPrefsNum")
			(element TP_TooltipShipConfigTextItem _title="'SAP DPM'" _value="damagePerMinCS" _roundDigit=0 _unit=null _userPrefsNum="_userPrefsNum")
			(element TP_TooltipShipConfigTextItem _title="'AP DPM'" _value="damagePerMinAP" _roundDigit=0 _unit=null _userPrefsNum="_userPrefsNum")
		)

		(block
			(element TP_TooltipShipConfigTextItem _title="'HE Penetration'" _value="pircingHE" _unit="'mm'" _roundDigit=0 _userPrefsNum="_userPrefsNum")
			(element TP_TooltipShipConfigTextItem _title="'SAP Penetration'" _value="pircingCS" _unit="'mm'" _roundDigit=0 _userPrefsNum="_userPrefsNum")
			(element TP_TooltipShipConfigTextItem _title="'AP Penetration'" _value="pircingAP" _unit="'mm'" _roundDigit=0 _userPrefsNum="_userPrefsNum")
		)
	)
)

(def element TP_TooltipAtbaItem(_shipTTX:gfx, _avatarEntity:gfx, _isRealParams:bool, _userPrefsNum:dict=null)
	(scope
		(var artilleryTTX:gfx = "_shipTTX.artillery")
		(var hasSecondaryGun:bool = "artilleryTTX ? artilleryTTX.atba.length > 0 : false")
		(var range:number = "artilleryTTX ? artilleryTTX.atbaMaxDist.value : null")

		#fix for skill---------------------
		(var selfPlayer:gfx = "$datahub.getSingleEntity(CC.playerAvatar)")
		(var avatarComponent:gfx = "_avatarEntity.avatar")

		#shipId -> ownShip (ship in port) -> crewId (crew on board) -> crewSkill (check crew has skill)
		(var isSelf:bool = "selfPlayer.avatar.id == avatarComponent.id")
		(var shipId:number = "avatarComponent ? avatarComponent.ship.ref.ship.id : null" (event "avatarComponent.evShipRefChanged"))
		(var shipType:str = "avatarComponent ? avatarComponent.shipType : null" (event "avatarComponent.evShipTypeChanged"))
		(var ownShipEntity:gfx = "$datahub.getPrimaryEntity(CC.ownShip, shipId)")

		(var skillId:number = "shipType in TP_ATBA_SKILL_ID ? TP_ATBA_SKILL_ID[shipType] : null")
		(var skillEntity:gfx = "$datahub.getPrimaryCompositeEntity(CC.skill, skillId, shipType, TP_ATBA_CREW_ID)")
		
		(var crewId:number = "ownShipEntity ? ownShipEntity.ownShip.crewId : null" (event "ownShipEntity.ownShip.evCrewChanged"))
		(var crewSkillEntity:gfx = "$datahub.getPrimaryCompositeEntity(CC.crewSkill, crewId, skillEntity.id)")
		#(crewId, skill) -> rutrns crewSkill if the crew is onboard and has skill

		(var isCorrectionNeeded:bool = "!(crewSkillEntity || isSelf || _isRealParams)")

		(var modifiers:dict = "skillEntity ? skillEntity.attributes.modifiers : null")
		(var rangeModifier:number = "isCorrectionNeeded && modifiers ? (1 + modifiers.GSMaxDist * 0.01) : 1.0") #value is negative and %
		#---------------------

		#fix------------------
		(var modifiedAtbaRange:number = "range * rangeModifier") #CAPTAIN SKILL FIX
		#---------------------
	)

	(style
		(align = "middle|center")
	)
	(bind visible "hasSecondaryGun")

	(vtile
		(style
			(vgap = "TP_TOOLTIP_ELEMENTS_VGAP")
		)

		(element TP_TooltipShipConfigTitleItem _title="'IDS_SHIP_PARAM_ATBA'")

		(block
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_MAX_DIST'" _value="modifiedAtbaRange" _unit="'km'" _userPrefsNum="_userPrefsNum")
		)
	)
)

(def element TP_TooltipTorpedoItem(_shipTTX:gfx, _userPrefsNum:dict=null)
	(scope
		#Surface Torps
		(var torpedoesTTX:gfx = "_shipTTX.torpedoes")
		#normal torps
		(var torpedoTTX:gfx = "torpedoesTTX ? torpedoesTTX.torpedo : null")
		(var torpedoRange:number = "torpedoTTX ? torpedoTTX.maxDist.value : null")
		(var torpedoDamage:number = "torpedoTTX ? torpedoTTX.damage.value : null")
		#deepwater torps
		(var torpedoDeepwaterTTX:gfx = "torpedoesTTX ? torpedoesTTX.torpedoDeepwater : null")
		(var torpedoDeepwaterRange:number = "torpedoDeepwaterTTX ? torpedoDeepwaterTTX.maxDist.value : null")
		(var torpedoDeepwaterDamage:number = "torpedoDeepwaterTTX ? torpedoDeepwaterTTX.damage.value : null")
		(var torpedoDeepwaterCanHitClasses:array = "torpedoDeepwaterTTX ? torpedoDeepwaterTTX.canHitClasses : null")
		#alt torps
		(var torpedoAltTTX:gfx = "torpedoesTTX ? torpedoesTTX.torpedoAlt : null")
		(var torpedoAltRange:number = "torpedoAltTTX ? torpedoAltTTX.maxDist.value : null")
		(var torpedoAltDamage:number = "torpedoAltTTX ? torpedoAltTTX.damage.value : null")
		#reload
		(var torpdoReload:number = "torpedoesTTX ? torpedoesTTX.reloadTime.value : null")

		#Submarine torps
		(var torpedoGroupsTTX:gfx = "_shipTTX.torpedoGroups")
		#normal torps
		(var subTorpedoTTX:gfx = "torpedoGroupsTTX ? torpedoGroupsTTX.torpedo : null")
		(var subTorpedoRange:number = "subTorpedoTTX ? subTorpedoTTX.maxDist.value : null")
		(var subTorpedoDamage:number = "subTorpedoTTX ? subTorpedoTTX.damage.value : null")
		#deepwater torps
		(var subTorpedoDeepwaterTTX:gfx = "torpedoGroupsTTX ? torpedoGroupsTTX.torpedoDeepwater : null")
		(var subTorpedoDeepwaterRange:number = "subTorpedoDeepwaterTTX ? subTorpedoDeepwaterTTX.maxDist.value : null")
		(var subTorpedoDeepwaterDamage:number = "subTorpedoDeepwaterTTX ? subTorpedoDeepwaterTTX.damage.value : null")
		(var subTorpedoDeepwaterCanHitClasses:number = "subTorpedoDeepwaterTTX ? subTorpedoDeepwaterTTX.canHitClasses : null")
		#alt torps
		(var subTorpedoAltTTX:gfx = "torpedoGroupsTTX ? torpedoGroupsTTX.torpedoAlt : null")
		(var subTorpedoAltRange:number = "subTorpedoAltTTX ? subTorpedoAltTTX.maxDist.value : null")
		(var subTorpedoAltDamage:number = "subTorpedoAltTTX ? subTorpedoAltTTX.damage.value : null")
		#forward reload
		(var torpdoBowReload:number = "(torpedoGroupsTTX && torpedoGroupsTTX.bowGroup) ? torpedoGroupsTTX.bowGroup.reloadTime.value : null")
		(var torpdoBowLoaders:number = "(torpedoGroupsTTX && torpedoGroupsTTX.bowGroup) ? torpedoGroupsTTX.bowGroup.numLoaders.value : null")
		#stern reload
		(var torpdoSternReload:number = "(torpedoGroupsTTX && torpedoGroupsTTX.sternGroup) ? torpedoGroupsTTX.sternGroup.reloadTime.value : null")
		(var torpdoSternLoaders:number = "(torpedoGroupsTTX && torpedoGroupsTTX.sternGroup) ? torpedoGroupsTTX.sternGroup.numLoaders.value : null")
	)

	(style
		(align = "middle|center")
	)

	(bind visible "torpedoesTTX || torpedoGroupsTTX")

	(vtile
		(style
			(vgap = "TP_TOOLTIP_ELEMENTS_VGAP")
		)

		(element TP_TooltipShipConfigTitleItem _title="'IDS_SHIP_PARAM_TORPEDOES'")

		(block
			(bind visible "torpedoesTTX")
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_TORPEDO_AMMO'" _value="torpedoRange" _unit="'km'" _userPrefsNum="_userPrefsNum")
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_TORPEDO_DEEPWATER_AMMO'" _value="torpedoDeepwaterRange" _unit="'km'" _userPrefsNum="_userPrefsNum")
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_TORPEDO_ALTERNATIVE_AMMO'" _value="torpedoAltRange" _unit="'km'" _userPrefsNum="_userPrefsNum")
		)

		(block
			(bind visible "torpedoesTTX")
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_TORPEDO_AMMO'" _value="torpedoDamage" _roundDigit=0 _userPrefsNum="_userPrefsNum")
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_TORPEDO_DEEPWATER_AMMO'" _value="torpedoDeepwaterDamage" _roundDigit=0 _userPrefsNum="_userPrefsNum")
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_TORPEDO_ALTERNATIVE_AMMO'" _value="torpedoAltDamage" _roundDigit=0 _userPrefsNum="_userPrefsNum")
		)

		(block
			(bind visible "torpedoGroupsTTX")
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_TORPEDO_AMMO'" _value="subTorpedoRange" _unit="'km'" _userPrefsNum="_userPrefsNum")
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_TORPEDO_DEEPWATER_AMMO'" _value="subTorpedoDeepwaterRange" _unit="'km'" _userPrefsNum="_userPrefsNum")
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_TORPEDO_ALTERNATIVE_AMMO'" _value="subTorpedoAltRange" _unit="'km'" _userPrefsNum="_userPrefsNum")
		)

		(block
			(bind visible "torpedoGroupsTTX")
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_TORPEDO_AMMO'" _value="subTorpedoDamage" _roundDigit=0 _userPrefsNum="_userPrefsNum")
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_TORPEDO_DEEPWATER_AMMO'" _value="subTorpedoDeepwaterDamage" _roundDigit=0 _userPrefsNum="_userPrefsNum")
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_TORPEDO_ALTERNATIVE_AMMO'" _value="subTorpedoAltDamage" _roundDigit=0 _userPrefsNum="_userPrefsNum")
		)

		(block
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_SHOT_DELAY'" _value="torpdoReload" _unit="'s'" _userPrefsNum="_userPrefsNum")
			(element TP_TooltipShipConfigTextItem _title="'Bow Group Reload'" _value="torpdoBowReload" _unit="'s'" _userPrefsNum="_userPrefsNum")
			(element TP_TooltipShipConfigTextItem _title="'Stern Group Reload'" _value="torpdoSternReload" _unit="'s'" _userPrefsNum="_userPrefsNum")
		)

		(block
			(bind visible "torpedoGroupsTTX")
			(element TP_TooltipShipConfigTextItem _title="'Bow Group Loaders'" _value="torpdoBowLoaders" _roundDigit=0 _userPrefsNum="_userPrefsNum")
			(element TP_TooltipShipConfigTextItem _title="'Stern Group Loaders'" _value="torpdoSternLoaders" _roundDigit=0 _userPrefsNum="_userPrefsNum")
		)

		(hblock
			(bind visible "torpedoDeepwaterTTX || subTorpedoDeepwaterTTX")
			(element TP_TooltipShipConfigClassIconsItem _title="'IDS_SHIP_PARAM_TORPEDOES_AFFECTED_SHIPS'" _canHitClasses="torpedoDeepwaterCanHitClasses" _userPrefsNum="_userPrefsNum")
			(element TP_TooltipShipConfigClassIconsItem _title="'IDS_SHIP_PARAM_TORPEDOES_AFFECTED_SHIPS'" _canHitClasses="subTorpedoDeepwaterCanHitClasses" _userPrefsNum="_userPrefsNum")
		)
	)
)

(def element TP_TooltipAirDefenseItem(_shipTTX:gfx, _userPrefsNum:dict=null)
	(scope
		(var airDefenseTTX:gfx = "_shipTTX.airDefense")

		(var integralValue:number = "airDefenseTTX ? airDefenseTTX.integralValue.value : 0")
		(var maxRange:number = "airDefenseTTX ? airDefenseTTX.averageAura.maxDist.value : null")
		(var bubble:number = "(airDefenseTTX && airDefenseTTX.bubble)  ? airDefenseTTX.bubble.numBubbles.value : null")

		(var auras:array = "airDefenseTTX ? airDefenseTTX.auras : []")
	)

	(style
		(align = "middle|center")
	)

	(bind visible "airDefenseTTX")

	(vtile
		(style
			(vgap = "TP_TOOLTIP_ELEMENTS_VGAP")
		)

		(element TP_TooltipShipConfigTitleItem _title="'IDS_SHIP_PARAM_AIR_DEFENSE'")

		(block
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_AIR_DEFENSE'" _value="integralValue" _roundDigit=0 _userPrefsNum="_userPrefsNum")
		)

		(block
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_MAX_DIST'" _value="maxRange" _unit="'km'" _userPrefsNum="_userPrefsNum")
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_AA_EXPL_COUNT'" _value="bubble" _roundDigit=0 _userPrefsNum="_userPrefsNum")
		)

		(reverse
			(controller $Repeat renderer='TP_TooltipShipConfigTextItem'
				(bind enabled "auras.length > 0")
				(bind count "auras.length")
				(args _title="'IDS_SHIP_PARAM_AA_AVERAGE_DAMAGE_' + toUpper(auras[$index].type)" _value="auras[$index].damage.value" _roundDigit=0 _userPrefsNum="_userPrefsNum")
			)
		)
	)
)

(def element TP_TooltipAirSupportItem(_shipTTX:gfx, _userPrefsNum:dict=null)
	(scope
		#AirSupport
		(var airSupportTTX:gfx = "_shipTTX.airSupport")
		(var range:number = "airSupportTTX ? airSupportTTX.maxDist.value : null")
		(var reload:number = "airSupportTTX ? airSupportTTX.reloadTime.value : null")
		(var numSquadrons:number = "airSupportTTX ? airSupportTTX.numSquadrons.value : null")
		(var isDepthCharge:bool = "airSupportTTX ? airSupportTTX.type == 'DEPTHCHARGE' : null")
		(var projectile:gfx = "airSupportTTX ? isDepthCharge ? airSupportTTX.bomber.bombDW : airSupportTTX.bomber.bombHE : null")
		(var damage:number = "projectile ? projectile.damage.value : null")
		(var piercing:number = "(projectile && !isDepthCharge) ? projectile.piercing.value : null")
	)

	(style
		(align = "middle|center")
	)

	(bind visible "airSupportTTX")

	(vtile
		(style
			(vgap = "TP_TOOLTIP_ELEMENTS_VGAP")
		)

		(element TP_TooltipShipConfigTitleItem _title="'IDS_SHIP_PARAM_AIR_SUPPORT'")

		(block
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_MAX_DIST'" _value="range" _unit="'km'" _userPrefsNum="_userPrefsNum")
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_SHOT_DELAY'" _value="reload" _unit="'s'" _userPrefsNum="_userPrefsNum")
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_AIR_SUPPORT_NUM_SQUADRONS'" _value="numSquadrons" _roundDigit=0 _unit=null _userPrefsNum="_userPrefsNum")

			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_DAMAGE'" _value="damage" _unit=null _roundDigit=0 _userPrefsNum="_userPrefsNum")
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_ARTILLERY_ALPHA_PIERCING'" _value="piercing" _roundDigit=0 _unit="'mm'" _userPrefsNum="_userPrefsNum")
		)
	)
)

(def element TP_TooltipDepthChargeItem(_shipTTX:gfx, _userPrefsNum:dict=null)
	(scope
		#AirSupport
		(var depthChargesTTX:gfx = "_shipTTX.depthCharges")
		(var numCharges:number = "depthChargesTTX ? depthChargesTTX.numCharges.value : null")
		(var numBombs:number = "depthChargesTTX ? depthChargesTTX.numBombs.value : null")
		(var reload:number = "depthChargesTTX ? depthChargesTTX.reloadTime.value : null")
		(var damage:number = "depthChargesTTX ? depthChargesTTX.damage.value : null")
	)

	(style
		(align = "middle|center")
	)

	(bind visible "depthChargesTTX")

	(vtile
		(style
			(vgap = "TP_TOOLTIP_ELEMENTS_VGAP")
		)

		(element TP_TooltipShipConfigTitleItem _title="'IDS_SHIP_PARAM_DEPTH_CHARGE'")

		(block
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_SHOT_DELAY'" _value="reload" _unit="'s'" _userPrefsNum="_userPrefsNum")
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_DAMAGE'" _value="damage" _unit=null _roundDigit=0 _userPrefsNum="_userPrefsNum")
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_DEPTH_CHARGE_MAX_PACKS'" _value="numCharges" _roundDigit=0 _unit=null _userPrefsNum="_userPrefsNum")
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_DEPTH_CHARGE_NUM_BOMBS_IN_PACK'" _value="numBombs" _roundDigit=0 _unit=null _userPrefsNum="_userPrefsNum")
		)
	)
)

(def element TP_TooltipMobilityItem(_shipTTX:gfx, _userPrefsNum:dict=null)
	(scope
		#surface speed
		(var mobilityTTX:gfx = "_shipTTX.mobility")
		(var surfaceSpeed:number = "mobilityTTX ? mobilityTTX.speed.value : null")

		#underwater speed
		(var underwaterMobilityTTX:gfx = "_shipTTX.underwaterMobility")
		(var underwaterSpeed:number = "underwaterMobilityTTX ? underwaterMobilityTTX.speed.value : null")
	)

	(style
		(align = "middle|center")
	)

	(bind visible "mobilityTTX || underwaterMobilityTTX")

	(vtile
		(style
			(vgap = "TP_TOOLTIP_ELEMENTS_VGAP")
		)

		(element TP_TooltipShipConfigTitleItem _title="'IDS_SHIP_PARAM_MAXSPEED'")

		(block
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_MOBILITY'" _value="surfaceSpeed" _unit="'kts'" _userPrefsNum="_userPrefsNum")
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_UNDERWATER_MOBILITY'" _value="underwaterSpeed" _unit="'kts'" _userPrefsNum="_userPrefsNum")
		)
	)
)

(def element TP_TooltipVisibilityItem(_shipTTX:gfx, _avatarEntity:gfx, _isRealParams:bool, _userPrefsNum:dict=null)
	(scope
		#fix for skill---------------------
		(var avatarComponent:gfx = "_avatarEntity ? _avatarEntity.avatar : null")

		#shipId -> ownShip (ship in port) -> crewId (crew on board) -> crewSkill (check crew has skill)
		(var isSelf:bool = "selfPlayer.avatar.id == avatarComponent.id")
		(var shipId:number = "avatarComponent ? avatarComponent.ship.ref.ship.id : null" (event "avatarComponent.evShipRefChanged"))
		(var shipType:str = "avatarComponent ? avatarComponent.shipType : null" (event "avatarComponent.evShipTypeChanged"))
		(var ownShipEntity:gfx = "$datahub.getPrimaryEntity(CC.ownShip, shipId)")

		(var skillId:number = "shipType in TP_CONCEALMENT_SKILL_ID ? TP_CONCEALMENT_SKILL_ID[shipType] : null")
		(var skillEntity:gfx = "$datahub.getPrimaryCompositeEntity(CC.skill, skillId, shipType, TP_CONCEALMENT_CREW_ID)")
		
		(var crewId:number = "ownShipEntity ? ownShipEntity.ownShip.crewId : null" (event "ownShipEntity.ownShip.evCrewChanged"))
		(var crewSkillEntity:gfx = "$datahub.getPrimaryCompositeEntity(CC.crewSkill, crewId, skillEntity.id)")
		#(crewId, skill) -> rutrns crewSkill if the crew is onboard and has skill

		(var isCorrectionNeeded:bool = "!(crewSkillEntity || isSelf || _isRealParams)")

		(var modifiers:dict = "skillEntity ? skillEntity.attributes.modifiers : null")
		(var visibilityModifier:number = "isCorrectionNeeded && modifiers ? (1 + modifiers.visibilityDistCoeff * 0.01) : 1.0") #value is negative and %
		#---------------------

		(var visibilityTTX:gfx = "_shipTTX.visibility")
		(var visibilityByShip:number = "visibilityTTX ? visibilityTTX.visibilityByShip.normal.value : null") #CAPTAIN SKILL FIX
		(var visibilityByPlane:number = "visibilityTTX ? visibilityTTX.visibilityByPlane.normal.value : null") #CAPTAIN SKILL FIX

		#fix------------------
		(var modifiedVisibilityByShip:number = "visibilityByShip * visibilityModifier") #CAPTAIN SKILL FIX
		(var modifiedVisibilityByPlane:number = "visibilityByPlane * visibilityModifier") #CAPTAIN SKILL FIX
		#---------------------
	)

	(style
		(align = "middle|center")
	)

	(bind visible "visibilityTTX")

	(vtile
		(style
			(vgap = "TP_TOOLTIP_ELEMENTS_VGAP")
		)

		(element TP_TooltipShipConfigTitleItem _title="'IDS_SHIP_PARAM_DETECTION'")

		(block
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_VISIBILITY_DIST_BY_SHIP'" _value="modifiedVisibilityByShip" _unit="'km'" _userPrefsNum="_userPrefsNum")
			(element TP_TooltipShipConfigTextItem _title="'IDS_SHIP_PARAM_VISIBILITY_DIST_BY_PLANE'" _value="modifiedVisibilityByPlane" _unit="'km'" _userPrefsNum="_userPrefsNum")
		)
	)
)

(def element TP_TooltipConsumableItem(_shipBattleInfo:gfx, _userPrefsNum:dict=null)
	(scope
		(var mainConsumables:array = "_shipBattleInfo.mainConsumables")
		(var altConsumables:array = "_shipBattleInfo.altConsumables")
	)
	(style
		(width = 100%)
	)
	(element ShipInfoConsumables
		_title = "altConsumables.length > 0 ? 'IDS_SHIP_INFO_MAIN_CONSUMABLES_OPTIONAL' : 'IDS_SHIP_INFO_MAIN_CONSUMABLES'"
		_items = "mainConsumables"
		_extraItems = "altConsumables"
		_iconSize = "45"
		_isSimple = true
		(bind visible "mainConsumables.length != 0 || altConsumables.length != 0")
	)
)

(def element TP_TooltipShipConfigTitleItem (_title:str, _userPrefsNum:dict=null)
	(scope
	)

	(bind visible "_title")
	(style
		(marginBottom = 2px)
		#(width = 45px)
		#(bind width "isUnitVisible ? TP_SHIPCONFIG_ELEMENT_WIDTH.WITH_UNIT : TP_SHIPCONFIG_ELEMENT_WIDTH.NO_UNIT")
		(align = "center|middle")
	)
	(hblock
		(style
			#(marginRight = "XS")
		)
		(tf
			(class $TextDefaultBoldNM)
			(style
				(marginRight = "XS")
			)
			(bind text "_title")
		)
	)
)

(def element TP_TooltipShipConfigTextItem (_title:str, _value:number, _unit:str=null, _showZero:bool=false, _roundDigit:number="1.0", _userPrefsNum:dict=null)
	(scope
		(var isValueVisible:bool = "_value || _showZero")
	)

	(style
		(marginBottom = 5px)
		(marginLeft = 20px)
	)
	(bind visible "isValueVisible")
	(hblock
		(style
			(marginRight = "XS")
			(align = "middle|center")
		)
		(tf
			(class $TextDefaultNM)
			(style
				(marginRight = "XS")
				(width = 200)
				(leading = -4px)
			)
			(bind text "tr(_title) + ': '")
		)
		(tf
			(class $TextDefaultNM)
			(style
				(marginRight = "XS")
			)
			(bind text "isValueVisible ? formatFloatingPoint(_value, _roundDigit) : ''")
		)
		(tf
			(bind visible "_unit")
			(class $TextDefaultNM)
			(bind text "_unit")
			(alpha = "TC")
			(style
				(width = "30px")
			)
		)
	)
)

(def element TP_TooltipShipConfigClassIconsItem (_title:str, _canHitClasses:array, _userPrefsNum:dict=null)
	(scope
		(var isVisible:bool = "_canHitClasses && _canHitClasses.length > 0")
	)

	(style
		(marginBottom = 5px)
		(marginLeft = 20px)
	)
	(bind visible "isVisible")
	(hblock
		(style
			(align = "middle|center")
		)
		(tf
			(class $TextDefaultNM)
			(style
				(marginRight = "XS")
				(width = 180px)
				(leading = -4px)
			)
			(bind text "tr(_title) + ': '")
		)
		(controller $Repeat renderer='TP_ClassIconItem'
			(bind enabled "isVisible")
			(bind count "_canHitClasses.length")
			(args _className="_canHitClasses[$index]")
		)
	)
)

(def element TP_ClassIconItem (_className:str) layout=true
	(style
		(width = 27px) (height = 0px) (marginTop = -25px)
		(bind backgroundImage "'url:../service_kit/ship_classes/icon_default_' + toLower(_className) + '.png'")
	)
)

#Active Consumables Info: wip
(def element TP_ShipActiveConsumablesItem(_entity:gfx)
)

#--------------------------------------------------------------------------------
#Macros
#--------------------------------------------------------------------------------
(def macro TP_GET_ISAFK ()
	#Returns isAFK:bool
	#
	#Entity
	(var avatarComponent:gfx = "_entity.hasComponent(CC.avatar) ? _entity.avatar : null")
	(var relationComponent:gfx = "_entity.hasComponent(CC.relation) ? _entity.relation : null")
	(var healthComponent:gfx = "_entity.hasComponent(CC.health) ? _entity.health : null")
	#Vars
	(var relationValue:number = "relationComponent ? relationComponent.value : -1" (event "relationComponent.evChanged"))
	(var isAlive:bool = "healthComponent ? healthComponent.isAlive : true" (event "healthComponent.evIsAliveChanged"))
	(var isBot:bool = "avatarComponent ? avatarComponent.isBot : true")
	(var tkStatus:bool = "avatarComponent ? avatarComponent.tkStatus : false" (event "avatarComponent.evTeamkillStatusChanged"))
	(var isLoadedInBattle:bool = "avatarComponent ? avatarComponent.isLoadedInBattle : true" (event "avatarComponent.evIsLoadedInBattleChanged"))
	(var isAFK:bool = "relationValue != SC.Battle.PLAYER_RELATION.SELF && !isBot && !isLoadedInBattle && isAlive")
)

(def macro TP_GET_COLORSCALE_PREF (_colorName:expression)
	(var name="_colorName+'PrefName'" type=str value="RM_COLOR_PREF_NAME[toUpper(_colorName)] + (isAlly ? RM_COLOR_PREF_POSTFIX.ALLY : RM_COLOR_PREF_POSTFIX.ENEMY)")
	(var name="_colorName+'PrefNum'" type=number value="$scope[_colorName+'PrefName'] in _userPrefsNum ? round(_userPrefsNum[$scope[_colorName+'PrefName']]) : RM_COLOR_DEFAULT[toUpper(_colorName)]" (event "userPrefsComponent.evUserPrefsChanged"))
	(var name="_colorName+'Scale'" type=number value="$scope[_colorName+'PrefNum'] / 10.0" (event "userPrefsComponent.evUserPrefsChanged"))
)

(def macro TP_GET_USERPREFS ()
	(var userPrefsComponent:gfx = "$datahub.getSingleComponent(CC.userPrefs)")
	(var _userPrefsNum:dict = "userPrefsComponent.userPrefs.chatBoxWidth" watch=false (event "userPrefsComponent.evUserPrefsChanged"))
)

(def macro TP_GET_PREF_NUMBER (_varName:expression, _prefKey:expression, _default:expression="0", _modifier:expression="1.0")
	(var name="_varName" type=number value="(_userPrefsNum && _prefKey in _userPrefsNum) ? (round(_userPrefsNum[_prefKey]) * _modifier) : _default")
	#(var name="_varName" type=number value="_default")
)

(def macro TP_GET_PREF_BOOL (_varName:expression, _prefKey:expression, _default:expression="true")
	(var name="_varName" type=bool value="(_userPrefsNum && _prefKey in _userPrefsNum) ? round(_userPrefsNum[_prefKey]) : _default")
	#(var name="_varName" type=bool value="_default")
)

(def macro TP_TOOLTIP_BEHAVIOUR (_isAlly:expression = false)

	(bindcall show animation =	{	duration:	"0.3",
									delay:		"0.3",
									easing:		"Easing.cubic_out",
									from:		{ alpha: 0, top: 5 },
									to:			{ alpha: 1, top: 0 }
								}
								on = 'rollOver'
	)

	(bindcall hide animation = {	duration:	"0.05",
									delay:		"0",
									easing:		"Easing.cubic_out",
									from:		{ alpha: 1, top: 0 },
									to:			{ alpha: 0, top: -5}
								}
								on = 'rollOut'
	)

	(offset = {	x: 35, y: 15})

	(screenBoundsOffset = {			left:	10,
									top:	10,
									right:	10,
									bottom:	10 })
	
	(priority = "0")

	(bind align "_isAlly ? right|middle : left|middle")
	(position="trackMouse")
)

(def macro TP_BIND_BLURINTENSITY(_blurIntensity:expression="0.3")
	(controller $Animation
		(bindcall play  duration="0.0001"
						to	 = "{ blurIntensity: _blurIntensity }"
						watch=false
						init=true
						(bind trigger "_blurIntensity")
		)
	)
)