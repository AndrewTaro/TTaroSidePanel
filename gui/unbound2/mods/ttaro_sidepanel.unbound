(def constant TT_SIDEPANEL_INSTALLED "true")
(def constant SP_ELEMENT_TOP "160")
(def constant SP_PLAYER_ROW_SIZE {
	WIDTH: 200,
	HEIGHT: 27
})
#(def constant SP_SHIPCONFIG_ELEMENT_WIDTH "48")
(def constant SP_SHIPCONFIG_ELEMENT_WIDTH {
	WITH_UNIT: 48,
	NO_UNIT: 35
})
(def constant SP_USERPREFS_KEY {
	#GENERAL
	ALT_VISIBLE: 'ttSidePanelShipStatsVisibleOnAlt',
	UNITS_VISIBLE: 'ttSidePanelShipStatsUnitsVisible',
	POS_OFFSET: 'ttSidePanelPosOffset',
	#NAMES
	CLAN_NAME: 'ttSidePanelClanNameVisible',
	PLAYER_NAME: 'ttSidePanelPlayerNameVisible',
	SHIP_NAME: 'ttSidePanelShipNameVisible',
	SHIP_TIER: 'ttSidePanelShipTierVisible',
	SHIP_ICON: 'ttSidePanelShipIconVisible',
	#SHIPCONFIGS
	#Artillery
	ARTILLERY_RANGE: 'ttSidePanelArtilleryRangeVisible',
	ARTILLERY_RELOAD: 'ttSidePanelArtilleryReloadVisible',
	#Torpedo
	TORPEDO_RANGE: 'ttSidePanelTorpedoRangeVisible',
	TORPEDO_RELOAD: 'ttSidePanelTorpedoReloadVisible',
	#AirSupport
	AIRSUPPORT_RANGE: 'ttSidePanelAirSupportRangeVisible',
	AIRSUPPORT_RELOAD: 'ttSidePanelAirSupportReloadVisible',
	#Speed
	SPEED_SURFACE: 'ttSidePanelSpeedSurfaceVisible',
	SPEED_UNDERWATER: 'ttSidePanelSpeedUnderwaterVisible',
	#Visibility
	VISIBILITY_SURFACE: 'ttSidePanelVisibilitySurfaceVisible',
	VISIBILITY_AIR: 'ttSidePanelVisibilityAirVisible',
})

(def element TTaroSidePanels () layout=true
	(scope
		(macro STAGE_SIZE)
		(macro SP_GET_USERPREFS)
		(macro SP_GET_PREF_NUMBER "'posOffset'" "SP_USERPREFS_KEY.POS_OFFSET" _modifier="10.0" _default="0.0")
		(var posTop:number = "SP_ELEMENT_TOP + posOffset - 50" watch=false (event "userPrefsComponent.evUserPrefsChanged"))
	)
	(bindcall externalCall 'inputMapping.onAction' "['createParamsForAllShipsInBattle', {}]" on='addedToStage')
	#(macro trace "$datahub.getCollection(CC.mods_ShipParamsInBattle).items[1].mods_ShipParamsInBattle.shipTTX.visibility.visibilityByShip.normal.value")
	#(macro trace "$datahub.getPrimaryEntity(CC.avatar, $datahub.getCollection(CC.mods_ShipParamsInBattle).items[1].mods_ShipParamsInBattle.avatarId).avatar.name")

	(style
		(bind width "stageWidth")
		(bind height "stageHeight")
	)

	(block
		(style
			(position = absolute)
			(bind top "posTop")
			(width = 100%)
		)
		(element SP_SidePanelLeft _userPrefsNum="_userPrefsNum")
		(element SP_SidePanelRight _userPrefsNum="_userPrefsNum")
	)
)

#Ally
(def element SP_SidePanelLeft (_userPrefsNum:dict=null)
	(scope
		(var avatarCollection:gfx = "$datahub.getCollection(CC.avatar)")
		(var allyCollection:gfx = "avatarCollection ? avatarCollection.getChildByPath('team.ally.sortedAlive') : null" (event "avatarCollection.evChildAdded") (event "collection.evChildRemoved"))
		(var allyItems:array = "allyCollection ? allyCollection.items : null" (event "allyCollection.evAdded") (event "allyCollection.evRemoved")  (event "allyCollection.evUpdated"))
		(var allyCount:number = "allyItems.length")
	)

	(style
		(position = absolute)
		(left = 0)
	)

	(element SP_HeaderItem _isAlly="true" _userPrefsNum="_userPrefsNum")

	(controller $Repeat renderer='SP_PlayerItem'
		(bind enabled "allyCount > 0")
		(bind count "allyCount")
		(args "allyItems[$index]" _isAlly="true" _userPrefsNum="_userPrefsNum")
	)
)

#Enemy
(def element SP_SidePanelRight (_userPrefsNum:dict=null)
	(scope
		(var avatarCollection:gfx = "$datahub.getCollection(CC.avatar)")
		(var enemyCollection:gfx = "avatarCollection ? avatarCollection.getChildByPath('team.enemy.sortedAlive') : null" (event "avatarCollection.evChildAdded") (event "collection.evChildRemoved"))
		(var enemyItems:array = "enemyCollection ? enemyCollection.items : null" (event "enemyCollection.evAdded") (event "enemyCollection.evRemoved") (event "enemyCollection.evUpdated"))
		(var enemyCount:number = "enemyItems.length")
	)

	(style
		(position = absolute)
		(right = 0)
		(align="right")
	)

	(element SP_HeaderItem _isAlly="false" _userPrefsNum="_userPrefsNum")

	(controller $Repeat renderer='SP_PlayerItem'
		(bind enabled "enemyCount > 0")
		(bind count "enemyCount")
		(args "enemyItems[$index]" _isAlly="false" _userPrefsNum="_userPrefsNum")
	)
)

#Header
(def element SP_HeaderItem (_isAlly:bool=false, _userPrefsNum:dict=null)
	(scope
		#Artillery
		(macro SP_GET_PREF_BOOL _varName="'isArtilleryRangeVisible'" _prefKey="SP_USERPREFS_KEY.ARTILLERY_RANGE")
		(macro SP_GET_PREF_BOOL _varName="'isArtilleryReloadVisible'" _prefKey="SP_USERPREFS_KEY.ARTILLERY_RELOAD")
		(var isArtilleryEnabled:bool = "isArtilleryRangeVisible || isArtilleryReloadVisible")
		#Torpedo
		(macro SP_GET_PREF_BOOL _varName="'isTorpedoRangeVisible'" _prefKey="SP_USERPREFS_KEY.TORPEDO_RANGE")
		(macro SP_GET_PREF_BOOL _varName="'isTorpedoReloadVisible'" _prefKey="SP_USERPREFS_KEY.TORPEDO_RELOAD")
		(var isTorpedoEnabled:bool = "isTorpedoRangeVisible || isTorpedoReloadVisible")
		#AirSupport
		(macro SP_GET_PREF_BOOL _varName="'isAirSupportRangeVisible'" _prefKey="SP_USERPREFS_KEY.AIRSUPPORT_RANGE")
		(macro SP_GET_PREF_BOOL _varName="'isAirSupportReloadVisible'" _prefKey="SP_USERPREFS_KEY.AIRSUPPORT_RELOAD")
		(var isAirSupportEnabled:bool = "isAirSupportRangeVisible || isAirSupportReloadVisible")
		#Mobility
		(macro SP_GET_PREF_BOOL _varName="'isSurfaceMobilityVisible'" _prefKey="SP_USERPREFS_KEY.SPEED_SURFACE")
		(macro SP_GET_PREF_BOOL _varName="'isUnderwaterMobilityVisible'" _prefKey="SP_USERPREFS_KEY.SPEED_UNDERWATER")
		(var isMobilityEnabled:bool = "isSurfaceMobilityVisible || isUnderwaterMobilityVisible")
		#Visibility
		(macro SP_GET_PREF_BOOL _varName="'isVisibilityByShipVisible'" _prefKey="SP_USERPREFS_KEY.VISIBILITY_SURFACE")
		(macro SP_GET_PREF_BOOL _varName="'isVisibilityByPlaneVisible'" _prefKey="SP_USERPREFS_KEY.VISIBILITY_AIR")
		(var isVisibilityEnabled:bool = "isVisibilityByShipVisible || isVisibilityByPlaneVisible")
		#ALT
		(macro SP_GET_PREF_BOOL _varName="'isVisibleOnlyAlt'" _prefKey="SP_USERPREFS_KEY.ALT_VISIBLE")
		(var camera:gfx = "$datahub.getSingleComponent(CC.camera)")
		(var altVision:bool = "camera ? camera.altVision : false" (event "camera.evAltVisionChanged"))
	)
	(style
		(hitTest = false)
	)
	(bind visible "isVisibleOnlyAlt ? altVision : true")

	(hblock
		(style
			(align = "center|middle")
			(height = 0)
			(marginTop = "-13")
		)
		#For margin
		(element SP_PlayerDivisionItem "_entity")
		(element SP_PlayerInfoItem "_entity" "_isAlly" _userPrefsNum="_userPrefsNum")
		(element SP_ShipTierItem "_entity")
		(element SP_ShipIconItem "_entity" "_isAlly" _userPrefsNum="_userPrefsNum")
		#

		(element SP_ShipConfigImageItem "'url:../modules/icon_module_Artillery_researched.png'"
			(bind visible "isArtilleryEnabled")
		)
		(element SP_ShipConfigImageItem "'url:../modules/icon_module_Torpedoes_researched.png'"
			(bind visible "isTorpedoEnabled")
			(style
				(alpha = 0.8)
			)
		)
		(element SP_ShipConfigImageItem "'url:../battle_hud/icon_frag/icon_frag_bomb.png'"
			(bind visible "isAirSupportEnabled")
			(style
				(alpha = 0.7)
			)
		) #TODO FIX
		#(element SP_ShipConfigImageItem "'url:../battle_hud/crosshair/indicators/crosshair_indicator_energy_white.png'") #TODO FIX
		(element SP_ShipConfigImageItem "'url:../modules/icon_module_Engine_researched.png'"
			(bind visible "isMobilityEnabled")
		)
		(element SP_ShipConfigImageItem "'url:../crew_commander/skills/detection_visibility_range.png'"
			(bind visible "isVisibilityEnabled")
		)

		#For margin
		(element SP_PlayerDivisionItem "_entity")
		(element SP_PlayerInfoItem "_entity" "_isAlly" _userPrefsNum="_userPrefsNum")
		(element SP_ShipTierItem "_entity")
		(element SP_ShipIconItem "_entity" "_isAlly")
		#
	)
)

#Player
(def element SP_PlayerItem (_entity:gfx, _isAlly:bool=false, _userPrefsNum:dict=null)
	(scope
		(var healthComponent:gfx = "_entity.hasComponent(CC.health) ? _entity.health : null")
		(var isAlive:bool = "healthComponent ? healthComponent.isAlive : false")
	)

	(style
		#(marginTop = 1px)
		#(margin = "[3,3,3,3]")
		#(height = "SP_PLAYER_ROW_SIZE.HEIGHT")
	)

	(element HorizontalDividerTwoPx
		(bind visible "$index == 0")
		(style
			(alpha = 2.0)
		)
	)
	#Ally
	(block
		(bind visible "_isAlly")
		(style
			(height = "SP_PLAYER_ROW_SIZE.HEIGHT")
		)

		(element SP_ShipHealthBarItem "_entity" "_isAlly")
		(hblock
			(style
				(align = "center|middle")
				(bind alpha "isAlive ? 1.0 : 0.4")
			)
			(element SP_PlayerDivisionItem "_entity")
			(element SP_PlayerInfoItem "_entity" "_isAlly" _userPrefsNum="_userPrefsNum")
			(element SP_ShipTierItem "_entity")
			(element SP_ShipIconItem "_entity" "_isAlly" _userPrefsNum="_userPrefsNum")
			(element SP_ShipConfigurationsItem "_entity")
		)
	)

	#Enemy
	(block
		(bind visible "!_isAlly")
		(style
			(height = "SP_PLAYER_ROW_SIZE.HEIGHT")
		)

		(element SP_ShipHealthBarItem "_entity" "_isAlly")
		(hblock
			(style
				(align = "center|middle")
				(bind alpha "isAlive ? 1.0 : 0.4")
			)
			(element SP_ShipConfigurationsItem "_entity")
			(element SP_ShipIconItem "_entity" "_isAlly" _userPrefsNum="_userPrefsNum")
			(element SP_ShipTierItem "_entity")
			(element SP_PlayerInfoItem "_entity" "_isAlly" _userPrefsNum="_userPrefsNum")
			(element SP_PlayerDivisionItem "_entity")
		)
	)

	(element HorizontalDividerTwoPx
		(style
			(alpha = 2.0)
		)
	)
)

#Player Info
(def element SP_PlayerInfoItem (_entity:gfx, _isAlly:bool=false, _userPrefsNum=null)
	(scope
		
	)
	
	(style
		(bind align "_isAlly ? left|middle : right|middle")
		(width = "185") #TODO 
		(height = "SP_PLAYER_ROW_SIZE.HEIGHT")
		(marginTop = -1)
	)
	(hblock
		(style
			#(bind align "_isAlly ? left : right")
		)
		(element SP_PlayerClanItem "_entity" _userPrefsNum="_userPrefsNum")
		(element SP_PlayerNameItem "_entity" _userPrefsNum="_userPrefsNum")
	)
	(block
		(style
			(marginTop = "2")
		)
		(element SP_ShipInfoItem "_entity" _isAlly="_isAlly" _userPrefsNum="_userPrefsNum")	
	)
)

(def element SP_PlayerDivisionItem (_entity:gfx)
	(scope
		(var divisionId:number = "_entity.divisionMember.divisionId" (event "_entity.divisionMember.evDivisionChanged"))
		(var divisionEntity:gfx = "$datahub.getPrimaryEntity(CC.division, divisionId)")
		(var divisionTag:str = "divisionEntity.division.name" (event "divisionEntity.division.evNameChanged"))
		(var divisionSign:number = "_entity.divisionMember.divisionSign" (event "_entity.divisionMember.evDivisionChanged"))
		(var isInSameDivision:bool = "_entity.divisionMember.isInSameDivision" (event "_entity.divisionMember.evDivisionChanged"))
		(var division:bool = "_entity.divisionMember.division" (event "_entity.divisionMember.evDivisionChanged"))
		(var isInDivision:bool = "division > 0")
		(var isDivisionHidden:bool = "_entity.divisionMember.divisionHidden" (event "_entity.divisionMember.evDivisionHiddenChanged"))
		(var divisionIconIndex:number = "isInSameDivision ? (divisionSign + 1) : (divisionSign + 1 + 10)")
	)
	(style
		(width = 20px)
		(align = "middle|center")
	)
	(mc division_item
		(bind visible "isInDivision && !isDivisionHidden")
		(bindcall gotoAndStop "divisionIconIndex" init=true)
	)
)

(def element SP_PlayerClanItem (_entity:gfx, _userPrefsNum:dict=null)
	(scope
		(var isClanNameEnabled:bool = "_entity.hasComponent(CC.clanman)")
		(var clanId:number = "_entity.clanman.clanId" (event "_entity.clanman.evClanIdChanged"))
		(var clanEntity:gfx = "$datahub.getPrimaryEntity(CC.clan, clanId)")
		(var clanName:str = "clanEntity.clan.tag" (event "clanEntity.clan.evTagChanged"))
		(var clanNameWithBrackets:str = "isClanNameEnabled ? '[' + clanName + ']' : ''")
		#(macro SP_GET_ISAFK)
		#(macro SP_GET_USERPREFS)
		(macro SP_GET_PREF_BOOL _varName="'isClanNameVisible'" _prefKey="SP_USERPREFS_KEY.CLAN_NAME")
	)
	(style
		(bind marginRight "isClanNameEnabled ? 3px : 0")
	)
	(bind visible "isClanNameVisible")
	(tf
		(class $TextDefault13NM)
		#(bind class "isAFK ? '$FontColorUnready' : tkStatus ? '$FontColorTeamkiller' : '$None'")
		(bind text "clanNameWithBrackets")
	)
)

(def element SP_PlayerNameItem (_entity:gfx, _userPrefsNum:dict=null)
	(scope
		(var pureName:str = "_entity.avatar.pureName" (event "_entity.avatar.pureName"))
		#(macro SP_GET_ISAFK)
		#(macro SP_GET_USERPREFS)
		(macro SP_GET_PREF_BOOL _varName="'isPlayerNameVisible'" _prefKey="SP_USERPREFS_KEY.PLAYER_NAME")
	)
	(style
		#(marginLeft = 3px)
		#(marginRight = 3px)
	)
	(bind visible "isPlayerNameVisible")
	(tf
		(class $TextDefault13NM)
		#(bind class "isAFK ? '$FontColorUnready' : tkStatus ? '$FontColorTeamkiller' : '$None'")
		(bind text "pureName")
	)
)

#Ship Info
(def element SP_ShipInfoItem(_entity:gfx, _isAlly:bool=false, _userPrefsNum="_userPrefsNum")
	(hblock
		(style
			#(margin = [3,3,3,3])
			#(width = "SP_PLAYER_ROW_SIZE.WIDTH")
			(align = "middle")
			(bind align "_isAlly ? left : right")
		)
		(element SP_ShipNameItem "_entity" _userPrefsNum="_userPrefsNum")
	)
)

(def element SP_ShipIconItem(_entity:gfx, _isAlly:bool=false, _userPrefsNum:dict=null)
	(scope
		(macro SHIP_MARKER_ICON_DATA "_entity.id")
		(var markerColorName:str = 
			"	!isAlive			? 'sunk' :
				isInSameDivision	? 'division' :
				tkStatus			? 'teamkiller' :
				'white'
		")

		(var iconName:str = "'icon_' + markerColorName + '_' + shipType")

		#(macro SP_GET_USERPREFS)
		(macro SP_GET_PREF_BOOL _varName="'isShipIconVisible'" _prefKey="SP_USERPREFS_KEY.SHIP_ICON")
	)

	(style
		(width = "SHIP_ICON_SIZE.WIDTH")
		(height = "SHIP_ICON_SIZE.HEIGHT")
		(bind scaleX "_isAlly ? 1.0 : -1.0")
		(pivotX = "SHIP_ICON_SIZE.WIDTH/2")
	)
	(bind visible "isShipIconVisible")

	(block
		(style
			(bind backgroundImage "'url:../battle_hud/markers/ship/' + iconName + '.png'")
		)
	)
)

(def element SP_ShipNameItem(_entity:gfx, _userPrefsNum:dict=null)
	(scope
		(var shipEntity:gfx = "_entity.avatar.ship.ref.ship" (event "_entity.avatar.evShipRefChanged"))
		(var shipName:str = "shipEntity ? shipEntity.nameIDS : ''") #IDS_PASB518
		(macro SP_GET_ISAFK)
		#(macro SP_GET_USERPREFS)
		(macro SP_GET_PREF_BOOL _varName="'isShipNameVisible'" _prefKey="SP_USERPREFS_KEY.SHIP_NAME")
	)
	(bind visible "isShipNameVisible")
	(tf
		(class $TextDefaultBoldNM)
		(bind class "isAFK ? '$FontColorUnready' : tkStatus ? '$FontColorTeamkiller' : '$None'")
		(style
			#(fontSize = 17)
		)
		(bind text "shipName")
	)
)

(def element SP_ShipTierItem(_entity:gfx, _userPrefsNum:dict=null)
	(scope
		(var shipEntity:gfx = "_entity.avatar.ship.ref.ship" (event "_entity.avatar.evShipRefChanged"))
		(var levelRome:str = "shipEntity ? shipEntity.levelRome : ''") #IDS_PASB518
		#(macro SP_GET_USERPREFS)
		(macro SP_GET_PREF_BOOL _varName="'isShipTierVisible'" _prefKey="SP_USERPREFS_KEY.SHIP_TIER")
	)
	(style
		(width = 20px)
		(align = "center")
	)
	(bind visible "isShipTierVisible")
	(tf
		(class $TextDefaultBoldNM)
		(style
			#(fontSize = 17)
		)
		(bind text "levelRome")
	)
)

(def element SP_ShipHealthBarItem(_entity:gfx, _isAlly:bool=false)
	(scope
		#entity
		(var _markerEntity:gfx = "_entity")

		#multi teams
		(var customElementsVisibilityComponent:gfx = "$datahub.getSingleEntity(CC.customElementsVisibility)")
		(var enabledElements:number = "customElementsVisibilityComponent ? customElementsVisibilityComponent.customElementsVisibility.enabledElements : null" (event "customElementsVisibilityComponent.customElementsVisibility.evChanged"))
		(var isMultyTeamEnabled:bool = "(enabledElements & SC.Battle.CUSTOM_BATTLE_ELEMENTS.MULTYTEAMS) > 0")

		#health
		(macro GET_MARKER_ENTITY_COMPONENT 'health')
		(var healthValue:number = "healthComponent ? healthComponent.value : 0" (event "healthComponent.evValueChanged"))
		(var healthMax:number = "healthComponent ? healthComponent.max : 0" (event "healthComponent.evMaxChanged"))
		(var healthRatio:number = "healthMax ? healthValue / healthMax : 1")

		#relation
		(var teamId:number = "_markerEntity.avatar ? _markerEntity.avatar.teamId : 0" (event "_markerEntity.avatar.evTeamIdChanged"))
		(macro GET_MARKER_ENTITY_COMPONENT 'relation')
		(var relationValue:number = "relationComponent ? relationComponent.value : 0" (event "relationComponent.evChanged"))
		(var relationStr:str = "toLower(SC.Battle.PLAYER_RELATION.VALUE_TO_NAME[relationValue])")
		(var isAlly:bool = "relationComponent && isIn(relationComponent.value, [SC.Battle.PLAYER_RELATION.ALLY, SC.Battle.PLAYER_RELATION.SELF])" (event "relationComponent.evChanged"))

		#diplomacy
		(macro GET_MARKER_ENTITY_COMPONENT 'diplomacyRelation')
		(var diplomacyRelationValue:number = "diplomacyRelationComponent ? diplomacyRelationComponent.value : 0" (event "diplomacyRelationComponent.evChanged"))
		(var relationStrByDiplomacy:str = "DIPLOMACY_RELATION_TO_RELATION_STR[diplomacyRelationValue]")

		#bar color
		(var markerColorTransform:dict = 
			"	diplomacyRelationComponent	? TWO_TEAMS_COLOR_TRANSFORMS[relationStrByDiplomacy] :
				isAlly						? TWO_TEAMS_COLOR_TRANSFORMS['ally'] :
				isMultyTeamEnabled			? MULTI_TEAMS_COLOR_TRANSFORMS[teamId]
											: TWO_TEAMS_COLOR_TRANSFORMS[relationStr]
		")
	)

	(style
		(position = absolute)
		(bind scaleX "_isAlly ? 1.0 : -1.0")
		(bind left "_isAlly ? 0 : auto")
		(bind right "_isAlly ? auto : 0")
		(pivotX = "0")
		(pivotY = "0")
		#(alpha = "0.3")
		#(marginTop = -3) #TODO: may have a better solution
	)
	(style
		(width = "SP_PLAYER_ROW_SIZE.WIDTH")
		(height = "SP_PLAYER_ROW_SIZE.HEIGHT")
		(align = "center|middle")
	)

	(block
		(class $WorldMarkerItemMargins)
		(style
			(width = "100%")
			(height = "100%")
			(align = "center|middle")
		)

		#(element InfotipSystemBlur)
		
		(block
			(class $FullsizeAbsolute)
			(style
				(backgroundImage = "'url:../battle_hud/markers/bar/bar_bg.png'")
				(backgroundSize = "fill")
				(scale9grid = [1, 1, 44, 2])
				(alpha = "0.8")
			)
		)

		(block
			(class $FullsizeAbsolute)
			(bind scaleX "healthRatio")

			(style
				(bind backgroundColor "0xFFFFFFFF")
				(backgroundSize = "fill")
				(alpha = "0.4")
			)

			(bind colorTransform "markerColorTransform")
		)
	)
)

#TTX
(def element SP_ShipConfigurationsItem(_entity:gfx, _userPrefsNum:dict=null)
	(scope
		(var ttxCollection:gfx = "$datahub.getCollection(CC.mods_ShipParamsInBattle)")
		(var ttxEntity:gfx = "$datahub.getPrimaryEntity(CC.mods_ShipParamsInBattle, _entity.avatar.id)" (event "ttxCollection.evAdded"))
		#(macro SP_GET_USERPREFS)
		(macro SP_GET_PREF_BOOL _varName="'isVisibleOnlyAlt'" _prefKey="SP_USERPREFS_KEY.ALT_VISIBLE")
		(var camera:gfx = "$datahub.getSingleComponent(CC.camera)")
		(var altVision:bool = "camera ? camera.altVision : false" (event "camera.evAltVisionChanged"))
	)

	(bind visible "isVisibleOnlyAlt ? altVision : true")

	(hblock
		(style
			(align = "middle|center")
		)

		(element SP_ShipConfigArtilleryItem "ttxEntity")
		(element SP_ShipConfigTorpedoItem "ttxEntity")
		(element SP_ShipConfigAirSupportItem "ttxEntity")
		#(element SP_ShipConfigBatteryItem "ttxEntity")
		(element SP_ShipConfigMobilityItem "ttxEntity")
		(element SP_ShipConfigVisibilityItem "ttxEntity")
	)
)

(def element SP_ShipConfigArtilleryItem(_ttxEntity:gfx, _userPrefsNum:dict=null)
	(scope
		(var artilleryTTX:gfx = "_ttxEntity.mods_ShipParamsInBattle.shipTTX.artillery")
		(var range:number = "artilleryTTX.mgMaxDist.value")
		(var reload:number = "artilleryTTX.mgReloadTime.value")
		#(macro SP_GET_USERPREFS)
		(macro SP_GET_PREF_BOOL _varName="'isArtilleryRangeVisible'" _prefKey="SP_USERPREFS_KEY.ARTILLERY_RANGE")
		(macro SP_GET_PREF_BOOL _varName="'isArtilleryReloadVisible'" _prefKey="SP_USERPREFS_KEY.ARTILLERY_RELOAD")
		(var isEnabled:bool = "isArtilleryRangeVisible || isArtilleryReloadVisible")
	)

	(bind visible "isEnabled")
	(style
		(bind alpha "artilleryTTX ? 1.0 : 0.0")
		#(width = "SP_SHIPCONFIG_ELEMENT_WIDTH.WITH_UNIT")
	)

	(hblock
		(style
			(align = "middle|center")
		)
		(block
			(element SP_ShipConfigTextItem _text="range" _unit="'km'"
				(bind visible "isArtilleryRangeVisible")
			)
			(element SP_ShipConfigTextItem _text="reload" _unit="'s'"
				(bind visible "isArtilleryReloadVisible")
			)
		)
	)
)

(def element SP_ShipConfigTorpedoItem(_ttxEntity:gfx, _userPrefsNum:dict=null)
	(scope
		(var torpedoesTTX:gfx = "_ttxEntity.mods_ShipParamsInBattle.shipTTX.torpedoes")
		#normal torps
		(var torpedoTTX:gfx = "torpedoesTTX.torpedo")
		(var torpedoRange:number = "torpedoTTX.maxDist.value")
		(var torpedoRangeStr:str = "torpedoTTX ? formatFloatingPoint(torpedoRange, 1) : ''")
		#deepwater torps
		(var torpedoDeepwaterTTX:gfx = "torpedoesTTX.torpedoDeepwater")
		(var torpedoDeepwaterRange:number = "torpedoDeepwaterTTX.maxDist.value")
		(var torpedoDeepwaterRangeStr:str = "torpedoDeepwaterTTX ? formatFloatingPoint(torpedoDeepwaterRange, 1) : ''")
		#alt torps
		(var torpedoAltTTX:gfx = "torpedoesTTX.torpedoAlt")
		(var torpedoAltRange:number = "torpedoAltTTX.maxDist.value")
		(var torpedoAltRangeStr:str = "torpedoAltTTX ? formatFloatingPoint(torpedoAltRange, 1) : ''")
		#all ranges
		(var ranges:str = "	torpedoRangeStr + 
							(torpedoRange && torpedoDeepwaterRange ? '/' : '') + torpedoDeepwaterRangeStr +
							(((torpedoRange || torpedoDeepwaterRange) && torpedoAltRange) ? '/' : '') + torpedoAltRangeStr
		")

		(var reload:number = "torpedoesTTX.reloadTime.value")
		#(macro SP_GET_USERPREFS)
		(macro SP_GET_PREF_BOOL _varName="'isTorpedoRangeVisible'" _prefKey="SP_USERPREFS_KEY.TORPEDO_RANGE")
		(macro SP_GET_PREF_BOOL _varName="'isTorpedoReloadVisible'" _prefKey="SP_USERPREFS_KEY.TORPEDO_RELOAD")
		(var isEnabled:bool = "isTorpedoRangeVisible || isTorpedoReloadVisible")
	)

	(bind visible "isEnabled")
	(style
		(bind alpha "torpedoesTTX ? 1.0 : 0.0")
		#(width = "SP_SHIPCONFIG_ELEMENT_WIDTH.WITH_UNIT")
	)

	(hblock
		(style
			(align = "middle|center")
		)
		(block
			#(element SP_ShipConfigTextItem _text="ranges" _unit="'km'")
			(element SP_ShipConfigTextItem _text="torpedoRange" _unit="'km'"
				(bind visible "isTorpedoRangeVisible")
			)
			(element SP_ShipConfigTextItem _text="torpedoDeepwaterRange" _unit="'km'"
				(bind visible "isTorpedoRangeVisible && torpedoDeepwaterRange")
			)
			(element SP_ShipConfigTextItem _text="torpedoAltRange" _unit="'km'"
				(bind visible "isTorpedoRangeVisible && torpedoAltRange")
			)
			(element SP_ShipConfigTextItem _text="reload" _unit="'s'"
				(bind visible "isTorpedoReloadVisible")
			)
		)
		#TODO: should be fixed
	)
)

(def element SP_ShipAntiAirItem(_ttxEntity:gfx)
)

(def element SP_ShipConfigAirSupportItem(_ttxEntity:gfx, _userPrefsNum:dict=null)
	(scope
		(var airSupportTTX:gfx = "_ttxEntity.mods_ShipParamsInBattle.shipTTX.airSupport")
		(var range:number = "airSupportTTX.maxDist.value")
		(var reload:number = "airSupportTTX.reloadTime.value")
		#(macro SP_GET_USERPREFS)
		(macro SP_GET_PREF_BOOL _varName="'isAirSupportRangeVisible'" _prefKey="SP_USERPREFS_KEY.AIRSUPPORT_RANGE")
		(macro SP_GET_PREF_BOOL _varName="'isAirSupportReloadVisible'" _prefKey="SP_USERPREFS_KEY.AIRSUPPORT_RELOAD")
		(var isEnabled:bool = "isAirSupportRangeVisible || isAirSupportReloadVisible")
	)

	(bind visible "isEnabled")
	(style
		(bind alpha "airSupportTTX ? 1.0 : 0.0")
		#(width = "SP_SHIPCONFIG_ELEMENT_WIDTH.WITH_UNIT")
	)

	(hblock
		(style
			(align = "middle|center")
		)
		(block
			(element SP_ShipConfigTextItem _text="range" _unit="'km'"
				(bind visible "isAirSupportRangeVisible")
			)
			(element SP_ShipConfigTextItem _text="reload" _unit="'s'"
				(bind visible "isAirSupportReloadVisible")
			)
		)
	)
)

(def element SP_ShipConfigBatteryItem(_ttxEntity:gfx)
	(scope
		(var batteryTTX:gfx = "_ttxEntity.mods_ShipParamsInBattle.shipTTX.battery")
		(var capacity:number = "batteryTTX.capacity.value")
	)

	#(bind visible "batteryTTX")
	(style
		(bind alpha "batteryTTX ? 1.0 : 0.0")
		(width = "SP_SHIPCONFIG_ELEMENT_WIDTH.WITH_UNIT")
	)

	(hblock
		(style
			(align = "middle|center")
		)
		#(element SP_ShipConfigImageItem "'url:../battle_hud/crosshair/indicators/crosshair_indicator_energy_white.png'") #TODO FIX
		(block
			(element SP_ShipConfigTextItem _text="capacity" _unit="'s'")
		)
	)
)

(def element SP_ShipConfigMobilityItem(_ttxEntity:gfx, _userPrefsNum:dict=null)
	(scope
		#surface speed
		(var mobilityTTX:gfx = "_ttxEntity.mods_ShipParamsInBattle.shipTTX.mobility")
		(var surfaceSpeed:number = "mobilityTTX.speed.value")

		#underwater speed
		(var underwaterMobilityTTX:gfx = "_ttxEntity.mods_ShipParamsInBattle.shipTTX.underwaterMobility")
		(var underwaterSpeed:number = "underwaterMobilityTTX.speed.value")

		#(macro SP_GET_USERPREFS)
		(macro SP_GET_PREF_BOOL _varName="'isSurfaceMobilityVisible'" _prefKey="SP_USERPREFS_KEY.SPEED_SURFACE")
		(macro SP_GET_PREF_BOOL _varName="'isUnderwaterMobilityVisible'" _prefKey="SP_USERPREFS_KEY.SPEED_UNDERWATER")
		(var isEnabled:bool = "isSurfaceMobilityVisible || isUnderwaterMobilityVisible")
	)

	(bind visible "isEnabled")
	(style
		(bind alpha "mobilityTTX || underwaterMobilityTTX ? 1.0 : 0.0")
		#(width = "SP_SHIPCONFIG_ELEMENT_WIDTH.WITH_UNIT")
	)

	(hblock
		(style
			(align = "middle|center")
		)
		(block
			(element SP_ShipConfigTextItem _text="surfaceSpeed" _unit="'kts'"
				(bind visible "isSurfaceMobilityVisible")
			)
			(element SP_ShipConfigTextItem _text="underwaterSpeed" _unit="'kts'"
				(bind visible "isUnderwaterMobilityVisible && underwaterSpeed")
			)
		)
	)
)

(def element SP_ShipConfigVisibilityItem(_ttxEntity:gfx, _userPrefsNum:dict=null)
	(scope
		(var visibilityTTX:gfx = "_ttxEntity.mods_ShipParamsInBattle.shipTTX.visibility")
		(var visibilityByShip:number = "visibilityTTX.visibilityByShip.normal.value") #CAPTAIN SKILL FIX
		(var visibilityByPlane:number = "visibilityTTX.visibilityByPlane.normal.value") #CAPTAIN SKILL FIX

		#(macro SP_GET_USERPREFS)
		(macro SP_GET_PREF_BOOL _varName="'isVisibilityByShipVisible'" _prefKey="SP_USERPREFS_KEY.VISIBILITY_SURFACE")
		(macro SP_GET_PREF_BOOL _varName="'isVisibilityByPlaneVisible'" _prefKey="SP_USERPREFS_KEY.VISIBILITY_AIR")
		(var isEnabled:bool = "isVisibilityByShipVisible || isVisibilityByPlaneVisible")
	)

	(bind visible "isEnabled")
	(style
		(bind alpha "visibilityTTX ? 1.0 : 0.0")
		#(width = "SP_SHIPCONFIG_ELEMENT_WIDTH.WITH_UNIT")
	)

	(hblock
		(style
			(align = "middle|center")
		)
		(block
			(element SP_ShipConfigTextItem _text="visibilityByShip" _unit="'km'"
				(bind visible "isVisibilityByShipVisible")
			)
			(element SP_ShipConfigTextItem _text="visibilityByPlane" _unit="'km'"
				(bind visible "isVisibilityByPlaneVisible")
			)
		)
	)
)

#Image Item
(def element SP_ShipConfigImageItem (_iconPath:str, _userPrefsNum:dict=null)
	(scope
		(var isValueVisible:bool = "_text || _showZero")
		#(macro SP_GET_USERPREFS)
		(macro SP_GET_PREF_BOOL _varName="'isUnitVisible'" _prefKey="SP_USERPREFS_KEY.UNITS_VISIBLE")
	)
	(style
		(bind width "isUnitVisible ? SP_SHIPCONFIG_ELEMENT_WIDTH.WITH_UNIT : SP_SHIPCONFIG_ELEMENT_WIDTH.NO_UNIT")
		(align = "middle|center")
	)
	(block
		(style
			(height = 20)
			(width = 20)
			(bind backgroundImage "_iconPath")
			(backgroundSize = "fill")
		)
	)
)

#Text Item
(def element SP_ShipConfigTextItem (_text:number, _unit:str=null, _showZero:bool=false, _userPrefsNum:dict=null)
	(scope
		(var isValueVisible:bool = "_text || _showZero")
		#(macro SP_GET_USERPREFS)
		(macro SP_GET_PREF_BOOL _varName="'isUnitVisible'" _prefKey="SP_USERPREFS_KEY.UNITS_VISIBLE")
	)

	(bind visible "isValueVisible")
	(style
		(marginBottom = 2px)
		#(width = 45px)
		(bind width "isUnitVisible ? SP_SHIPCONFIG_ELEMENT_WIDTH.WITH_UNIT : SP_SHIPCONFIG_ELEMENT_WIDTH.NO_UNIT")
		(align = "right")
	)
	(hblock
		(style
			(marginRight = "XS")
		)
		(tf
			(class $TextDefault13NM)
			(style
				(marginRight = "XS")
			)
			(bind text "isValueVisible ? formatFloatingPoint(_text, 1) : ''")
		)
		(tf
			(bind visible "isUnitVisible")
			(class $TextDefault13NM)
			(bind text "_unit")
			(alpha = "TC")
			(style
			(width = "20px")
			)
		)
	)
)

#Detection Info
(def element SP_ShipDetectionItem(_entity:gfx)
)

#Active Consumables Info
(def element SP_ShipActiveConsumablesItem(_entity:gfx)
)

(def macro SP_GET_ISAFK ()
	#Returns isAFK:bool
	#
	#Entity
	(var avatarComponent:gfx = "_entity.hasComponent(CC.avatar) ? _entity.avatar : null")
	(var relationComponent:gfx = "_entity.hasComponent(CC.relation) ? _entity.relation : null")
	(var healthComponent:gfx = "_entity.hasComponent(CC.health) ? _entity.health : null")
	#Vars
	(var relationValue:number = "relationComponent ? relationComponent.value : -1" (event "relationComponent.evChanged"))
	(var isAlive:bool = "healthComponent ? healthComponent.isAlive : true" (event "healthComponent.evIsAliveChanged"))
	(var isBot:bool = "avatarComponent ? avatarComponent.isBot : true")
	(var tkStatus:bool = "avatarComponent ? avatarComponent.tkStatus : false" (event "avatarComponent.evTeamkillStatusChanged"))
	(var isLoadedInBattle:bool = "avatarComponent ? avatarComponent.isLoadedInBattle : true" (event "avatarComponent.evIsLoadedInBattleChanged"))
	(var isAFK:bool = "relationValue != SC.Battle.PLAYER_RELATION.SELF && !isBot && !isLoadedInBattle && isAlive")
)

(def macro SP_GET_COLORSCALE_PREF (_colorName:expression)
	(var name="_colorName+'PrefName'" type=str value="RM_COLOR_PREF_NAME[toUpper(_colorName)] + (isAlly ? RM_COLOR_PREF_POSTFIX.ALLY : RM_COLOR_PREF_POSTFIX.ENEMY)")
	(var name="_colorName+'PrefNum'" type=number value="$scope[_colorName+'PrefName'] in _userPrefsNum ? round(_userPrefsNum[$scope[_colorName+'PrefName']]) : RM_COLOR_DEFAULT[toUpper(_colorName)]" (event "userPrefsComponent.evUserPrefsChanged"))
	(var name="_colorName+'Scale'" type=number value="$scope[_colorName+'PrefNum'] / 10.0" (event "userPrefsComponent.evUserPrefsChanged"))
)

(def macro SP_GET_USERPREFS ()
	(var userPrefsComponent:gfx = "$datahub.getSingleComponent(CC.userPrefs)")
	(var _userPrefsNum:dict = "userPrefsComponent.userPrefs.chatBoxWidth" watch=false (event "userPrefsComponent.evUserPrefsChanged"))
)

(def macro SP_GET_PREF_NUMBER (_varName:expression, _prefKey:expression, _default:expression="0", _modifier:expression="1.0")
	(var name="_varName" type=number value="_prefKey in _userPrefsNum ? (round(_userPrefsNum[_prefKey]) * _modifier) : _default" (event "userPrefsComponent.evUserPrefsChanged"))
	#(var name="_varName" type=number value="_default")
)

(def macro SP_GET_PREF_BOOL (_varName:expression, _prefKey:expression, _default:expression="true")
	(var name="_varName" type=bool value="_prefKey in _userPrefsNum ? round(_userPrefsNum[_prefKey]) : _default" (event "userPrefsComponent.evUserPrefsChanged"))
	#(var name="_varName" type=bool value="_default")
)